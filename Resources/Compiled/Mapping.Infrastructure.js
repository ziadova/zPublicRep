/*
	
	Copyright (c) 2013, Latitude Geographics Group Ltd.
	All rights reserved.
	       
	Redistribution is not permitted. 
	
	Use in binary form, without modification, is permitted provided that neither 
	the name of the organization nor the names of its contributors may be used 
	to endorse or promote products derived from this software without specific 
	prior written permission.
	       
	THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDER ''AS IS'' AND ANY
	EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	DISCLAIMED. IN NO EVENT SHALL LATITUDE GEOGRAPHICS GROUP LTD. BE LIABLE FOR ANY
	DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

geocortex||(geocortex={});if(!geocortex.essentialsHtmlViewer)geocortex.essentialsHtmlViewer={};geocortex.essentialsHtmlViewer.version="1.3.1.0045";dojo.require("esri.layers.FeatureLayer");dojo.require("esri.layers.wms");dojo.require("esri.layers.wmts");dojo.require("esri.virtualearth.VETiledLayer");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolBase",null,{constructor:function(a,b){dojo.mixin(this,b);this.app=a},app:null,name:"",isActive:false,setActive:function(a){a?(this.isActive=true,this.onActivated()):(this.isActive=false,this.onDeactivated())},onActivated:function(){},onDeactivated:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProviderBase",null,{constructor:function(a){this.app=a;this.id="SearchProvider-"+geocortex.framework.utils.alphaNumericToken();this.supportsOffline=false;this.status=geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.IDLE},initialize:function(a){this.inherited(arguments)},app:null,id:null,name:null,description:null,supportsOffline:null,isEnabled:null,status:null,search:function(){},cancelSearch:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.AttachmentInfo",null,{constructor:function(){this.id=new Observable;this.contentType=new Observable;this.size=new Observable;this.name=new Observable;this.url=new Observable},id:null,contentType:null,size:null,name:null,url:null});dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.AttributeGroup",null,{attributes:null,owner:null});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.AuthenticationEventArgs",null,{result:null,username:null,token:null});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.modules.command.CommandViewModel",geocortex.framework.ui.ViewModelBase,{constructor:function(a,b,c,d){this.commandName=new Observable(null);this.commandParameter=new Observable(null);this.canExecute=new Observable(true);this.notExecuteHidden=new Observable(false);this.cssClass=new Observable(null);c&&(d?this._bindToCommand(c,d):this._bindToCommand(c))},commandName:null,commandParameter:null,canExecute:null,cssClass:null,_canExecuteChangedBindingToken:null,
_command:null,applyContext:function(a){this.commandParameter.get()||this.canExecute.set(this._command.canExecute(a))},_bindToCommand:function(a,b){this._canExecuteChangedBindingToken&&this._command&&this._command.canExecuteChanged.unsubscribe(this._canExecuteChangedBindingToken);this.commandName.set(a);this.commandParameter.set(b||null);this._command=this.app.commandRegistry.command(a);this._canExecuteChangedBindingToken=this._command.canExecuteChanged.subscribe(this,this._handleCanExecuteChanged);
this.canExecute.set(this._command.canExecute(b))},_handleCanExecuteChanged:function(){this.canExecute.set(this._command.canExecute(this.commandParameter.get()))}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.DataLinkingResult",null,{constructor:function(){this.dataLink=new Observable;this.table=new Observable},_attributeGroup:null,dataLink:null,table:null,toAttributes:function(){var a=this.table.get();if(!a)return null;for(var b={},c=0;c<a.columns.length;c++)b[a.columns[c]]=a.rows.length>0?a.rows[0].row[c]:null;return b},asAttributeGroup:function(){if(!this._attributeGroup)this._attributeGroup=new geocortex.essentialsHtmlViewer.mapping.infrastructure.AttributeGroup,
this._attributeGroup.owner=this,this._attributeGroup.attributes=this.toAttributes();return this._attributeGroup}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",null,{_graphic:null,_isAttachmentInfosLoaded:false,_defaultFieldFormatString:null,token:null,layer:null,featureSet:null,labelFormat:null,minScale:null,maxScale:null,zoomScale:null,zoomFactor:null,zoomExtent:null,borderColor:null,fillColor:null,id:null,attributes:null,label:null,description:null,descriptionFormat:null,longDescription:null,longDescriptionFormat:null,hyperlinks:null,extendedProperties:null,attachmentInfos:null,
attachmentInfosInitialized:null,hasAttachments:null,hasRelationships:null,hasGeometry:null,esriFeature:null,iconUri:null,linkedAttributes:null,dataLinkingResults:null,_allowUnsafeContent:null,_resolveLayerFields:null,constructor:function(a){var b=this,c=null;this._resolveLayerFields=false;if(a&&a.hasOwnProperty("graphic"))this._graphic=a.graphic;if(a&&a.hasOwnProperty("layer"))c=a.layer;if(a&&a.hasOwnProperty("resolveLayerFields"))this._resolveLayerFields=a.resolveLayerFields;this._allowUnsafeContent=
a&&a.hasOwnProperty("allowUnsafeContent")?a.allowUnsafeContent:false;this.token=geocortex.framework.utils.alphaNumericToken();this.attributes=new ObservableCollection;this.linkedAttributes=new ObservableCollection;this.esriFeature=new Observable(this._graphic);this.esriFeature.bind(this,function(){this._graphic=this.esriFeature.get();this._setupLinkedAttributes();this.loadAttributes(this._resolveLayerFields);this.attachmentInfos.clear();this._isAttachmentInfosLoaded=false;this.attachmentInfosInitialized.set(false)});
this.hasAttachments=new Observable(false);this.hasRelationships=new Observable(false);this.hasVisibleRelationships=new Observable(false);this.hasGeometry=new Observable(false);this.hasGeometry.get=function(){return b._hasGeometryGet()};this.hyperlinks=new ObservableCollection;this._defaultFieldFormatString="{0}: {1}";this.id=new Observable;this.id.get=function(){return b._idGet()};this.label=new Observable;this.label.get=function(){return b._labelGet()};this.labelFormat=new Observable;this.labelFormat.get=
function(){return b._labelFormatGet()};this.borderColor=new Observable;this.borderColor.get=function(){return b._borderColorGet()};this.fillColor=new Observable;this.fillColor.get=function(){return b._fillColorGet()};this.description=new Observable;this.description.get=function(){return b._descriptionGet()};this.descriptionFormat=new Observable;this.descriptionFormat.get=function(){return b._descriptionFormatGet()};this.longDescription=new Observable;this.longDescription.get=function(){return b._longDescriptionGet()};
this.longDescriptionFormat=new Observable;this.longDescriptionFormat.get=function(){return b._longDescriptionFormatGet()};this.minScale=new Observable;this.minScale.get=function(){return b._minScaleGet()};this.maxScale=new Observable;this.maxScale.get=function(){return b._maxScaleGet()};this.iconUri=new Observable;this.iconUri.get=function(){return b._iconUriGet()};this.zoomScale=new Observable;this.zoomScale.get=function(){return b._zoomScaleGet()};this.zoomExtent=new Observable;this.zoomFactor=
new Observable;this.zoomFactor.get=function(){return b._zoomFactorGet()};this.attachmentInfosInitialized=new Observable(false);this.extendedProperties=new ObservableCollection;this.dataLinkingResults=new ObservableCollection;if(c){this.layer=c;this.hasAttachments.set(this.layer.hasAttachments);if(this.layer.relationships&&this.layer.relationships.length>0){this.hasRelationships.set(true);for(a=0;a<this.layer.relationships.length;a++)if(this.layer.relationships[a].visible){this.hasVisibleRelationships.set(true);
break}}c.featureHyperlinks!=null&&this.hyperlinks.addItems(c.featureHyperlinks)}this._graphic&&this._setupLinkedAttributes();this.loadAttributes(this._resolveLayerFields);this._prepAttachmentInfos()},withinScaleRange:function(a){return this.maxScale.get()==0&&this.minScale.get()==Infinity||isNaN(this.maxScale.get())&&isNaN(this.minScale.get())?true:!a?false:this.maxScale.get()<a&&a<this.minScale.get()},calculateScaleToMakeVisible:function(a){return this.withinScaleRange(a)?a:a>this.minScale.get()?
this.minScale.get():this.maxScale.get()+1},_iconUriGet:function(){return this.iconUri.value?this.iconUri.value:this.layer&&this.layer.iconUri?this.layer.iconUri:this.featureSet&&this.featureSet.iconUri&&this.featureSet.iconUri.value?this.featureSet.iconUri.value:null},_labelFormatGet:function(){return this.labelFormat.value?this.labelFormat.value:this.layer&&this.layer.featureLabel?this.layer.featureLabel:this.featureSet&&this.featureSet.esriFeatureSet&&this.featureSet.esriFeatureSet.displayFieldName?
"{"+this.featureSet.esriFeatureSet.displayFieldName+"}":""},_idGet:function(){if(this.id.value)return this.id.value;else{var a="";if(this._graphic&&this.layer){var b=null;this.layer&&(b=this.layer.getObjectIdFieldName());b&&this._graphic.attributes&&this._graphic.attributes.hasOwnProperty(b)&&(a=this._graphic.attributes[b])}return this.id.value=a}},_minScaleGet:function(){return this.minScale.value?this.minScale.value:this.layer&&!isNaN(this.layer.minScale)?this.layer.minScale:Infinity},_maxScaleGet:function(){return this.maxScale.value?
this.maxScale.value:this.layer&&!isNaN(this.layer.maxScale)?this.layer.maxScale:null},_zoomScaleGet:function(){return this.zoomScale.value?this.zoomScale.value:this.layer&&this.layer.featureZoomScale?this.layer.featureZoomScale:null},_zoomFactorGet:function(){return this.zoomFactor.value?this.zoomFactor.value:this.layer&&this.layer.featureZoomFactor?this.layer.featureZoomFactor:null},_borderColorGet:function(){return this.borderColor.value?this.borderColor.value:this.layer&&this.layer.featureBorderColor?
this.layer.featureBorderColor:null},_getDefaultFieldValue:function(){var a="",b=this.esriFeature.get();b&&this.layer&&this.layer.displayField&&(a=b.attributes[this.layer.displayField.name]);if((a==null||a==void 0||!a.toString().trim())&&b&&b.attributes)a=b.attributes.OBJECTID;if((a==null||a==void 0||!a.toString().trim())&&b&&b.attributes)for(var c in b.attributes)if(a=b.attributes[c],a!==null&&a!==void 0&&a.toString().trim())break;return a},_labelGet:function(){var a=null;if(this.label.value)a=this.label.value;
else if(a=this.formatTemplateString(this.labelFormat.get()),a==null||a==void 0||!a.toString().trim())a=this._getDefaultFieldValue(),a!=void 0&&a!=null&&this.layer&&(a=this.layer.displayName&&this.layer.displayName.toString().trim()?this.layer.displayName+(a.toString().trim()?", "+a:""):a.toString().trim()?a:"");return a},_hasGeometryGet:function(){return this._graphic&&this._graphic.geometry?true:false},_fillColorGet:function(){return this.fillColor.value?this.fillColor.value:this.layer&&this.layer.featureFillColor?
this.layer.featureFillColor:null},_descriptionGet:function(){var a=null;return a=this.description.value?this.description.value:this.formatTemplateString(this.descriptionFormat.get())},_longDescriptionGet:function(){var a=null;return a=this.longDescription.value?this.longDescription.value:this.formatTemplateString(this.longDescriptionFormat.get())},_descriptionFormatGet:function(){return this.descriptionFormat.value?this.descriptionFormat.value:this.layer&&this.layer.featureDescription?this.layer.featureDescription:
null},_longDescriptionFormatGet:function(){return this.longDescriptionFormat.value?this.longDescriptionFormat.value:this.layer&&this.layer.featureLongDescription?this.layer.featureLongDescription:this.descriptionFormat.get()},_prepAttachmentInfos:function(){var a=this,b=new ObservableCollection,c=b.get;b.get=function(){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return c.call(b)};var d=b.getItems;b.getItems=function(){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return d.call(b)};
var e=b.getAt;b.getAt=function(c){a._isAttachmentInfosLoaded||a._loadAttachmentsInfos();return e.call(b,c)};this.attachmentInfos=b},loadAttributes:function(a){this.attributes.clear();this.attributes.addItems(this.getAttributesFromEsriFeature(this._graphic.attributes,a))},_resolveCodedDomainValue:function(a,b,c){if(!c.fields)return a;for(var c=c.fields,d=0;d<c.length;d++){var e=c[d];if(e.name===b.name){if(e.domain&&e.domain.codedValues){b=e.domain.codedValues;for(c=0;c<b.length;c++)if(d=b[c],d.code===
a){a=d;break}}break}}return a},getAttributesFromEsriFeature:function(a,b){var c=[];if(b!==false&&this.layer&&this.layer.fields)for(var d=0;d<this.layer.fields.length;d++){var e=this.layer.fields[d],f;a&&!String.isNullOrEmpty(e.name)&&(f=a[e.name]);geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(e.name)||(typeof f==="undefined"||f==null?c.push(new FeatureAttribute("",e.name,e.alias,e.displayName,e.visible,e.dataType,null,this.layer,e)):c.push(new FeatureAttribute(f,
e.name,e.alias,e.displayName,e.visible,e.dataType,null,this.layer,e)))}else if(this.featureSet&&this.featureSet.attributes&&this.featureSet.attributes.length()>0&&a)for(f=0;f<this.featureSet.attributes.length();f++){var d=this.featureSet.attributes.getAt(f),g=d.name.get();geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(g)||a.hasOwnProperty(g)&&c.push(new FeatureAttribute(a[g],g,d.alias.get(),d.displayName.get(),d.visible.get(),null,null,this.layer,e))}else if(a)for(d in a)c.push(new FeatureAttribute(a[d],
d));return c},getAttributes:function(){for(var a=this.linkedAttributes.get(),b=[],c=0;c<a.length;c++){var d=a[c];if(c===0)for(var d=this.getAttributesFromEsriFeature(d.attributes),e=0;e<d.length;e++)b.push(d[e]);else{var d=d.attributes,f;for(f in d)d.hasOwnProperty(f)&&b.push(new FeatureAttribute(d[f],f,f,f,true,null,null,this.layer))}}return b},getPrimaryKeyValue:function(){var a=null;if(this.layer&&this.layer.primaryKeyField){var b=this.layer.primaryKeyField;b&&(a=this._graphic.attributes[b.name])}return a},
getFeatureUrl:function(){var a=null,b=this.layer.getLayerUrl(),c=this.getPrimaryKeyValue();b&&c&&(a=b+"/"+c);return a},equals:function(a){if(!a||!a.declaredClass||a.declaredClass!="geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature"||!this._graphic||!a._graphic)return false;if(this===a)return true;var b=this._graphic.geometry,c=a._graphic.geometry,d=this.id.get()===a.id.get()||this.id.get()&&a.id.get()&&this.id.get()==a.id.get(),e=this.layer===a.layer||this.layer&&a.layer&&this.layer.id==
a.layer.id,f=this.layer===a.layer||this.layer&&a.layer&&this.layer.mapService===a.layer.mapService||this.layer&&a.layer&&this.layer.mapService&&a.layer.mapService&&this.layer.mapService.id==a.layer.mapService.id,g=b===c||b&&c&&b.declaredClass==c.declaredClass,h=function(a,b){return a===b||a.type===b.type&&a.spatialReference&&b.spatialReference&&a.spatialReference.equals(b.spatialReference)};if(!d||!e||!f||!g)return false;if(!geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils.esriFeaturesEqual(this._graphic,
a._graphic))return false;switch(b.declaredClass){case "esri.geometry.Point":case "esri.geometry.ScreenPoint":return b===c||b.x==c.x&&b.y==c.y&&h(b,c);case "esri.geometry.MultiPoint":var i=h(b,c);if(i&&b.points.length===c.points.length){for(a=0;i&&a<b.length;a++)i=b.points[a][0]===c.points[a][0]&&b.points[a][1]===c.points[a][1];return i}return false;case "esri.geometry.Polyline":return(i=h(b,c))&&dojo.forEach(b.paths,function(a,b){if(a.length===c.paths[b].length){for(var d=0;i&&d<a.length;d++)i=a[d][0]===
c.paths[b][d][0]&&a[d][1]===c.paths[b][d][1];if(!i)return i}else return false}),i;case "esri.geometry.Polygon":return(i=h(b,c))&&dojo.forEach(b.rings,function(a,b){if(a.length===c.rings[b].length){for(var d=0;i&&d<a.length;d++)i=a[d][0]===c.rings[b][d][0]&&a[d][1]===c.rings[b][d][1];if(!i)return i}else return false}),i;case "esri.geometry.Extent":if((i=h(b,c))&&b.xmin==c.xmin&&b.xmax==c.xmax&&b.ymin==c.ymin&&b.ymax==c.ymax)break;return false;default:return console.log("Warning: equals() in Feature.js - declared class does not match known geometry."),
false}return true},_loadAttachmentsInfos:function(){var a=this;this._isAttachmentInfosLoaded=true;if(!a.layer||!a.layer.mapService||!a.layer.mapService.serviceLayer)throw new Exception("Error fetching attachment infos: Feature was not associated with any known layer or map service.");var b={url:a.getFeatureUrl()+"/attachments/?f=json&ts={0}".format((new Date).getTime()),handleAs:"json"},c=a.layer.mapService.serviceToken||null;c&&(b.url+="&token="+encodeURIComponent(c));esri.request(b).then(function(b){if(b&&
b.attachmentInfos&&b.attachmentInfos.length>0){var e;for(e=0;e<b.attachmentInfos.length;e++){var f=b.attachmentInfos[e],g=new geocortex.essentialsHtmlViewer.mapping.infrastructure.AttachmentInfo;g.id.set(f.id);g.contentType.set(f.contentType);g.size.set(f.size);g.name.set(f.name);f="{0}/attachments/{1}".format(a.getFeatureUrl(),f.id);c&&(f+="?token="+c);g.url.set(f);a.attachmentInfos.addItem(g)}}a.attachmentInfosInitialized.set(true)},function(){a.attachmentInfosInitialized.set(true)})},formatTemplateString:function(a){if(!a)return"";
var b=this;return a.replace(/{{.+?}}|{.+?}/g,function(a){if(a.match(/{{.+?}}/g))return a.substring(1,a.length-1);else{var d=a.substring(1,a.length-1),a="",e=d.match(/(.*)\.Name\(\)$/);e&&(d=e[1]);for(var e=b.getAttributes(),f=0;f<e.length;f++)if(e[f].name&&e[f].name.get()===d||e[f].alias&&e[f].alias.get()===d){a=e[f].presentableValue.get();break}if(!a&&(e={},b.parseDataLinkId(d,e)&&b.dataLinkingResults.get()))for(f=0;f<b.dataLinkingResults.length();f++)if(d=b.dataLinkingResults.getAt(f),d.dataLink.get()&&
d.dataLink.get().id===e.dataLinkId){if(e.attributeName.toLowerCase()==="_rowcount")a=d.table?d.table.rows.length:0;else if(d.table.get()){d=d.table.get();for(f=0;f<d.columns.length;f++)if(d.columns[f].toLowerCase()===e.attributeName.toLowerCase()){d.rows.length>0&&(a=d.rows[0].row[f]);break}}break}b._allowUnsafeContent||(a=a||a===0?String.escapeHtmlEncode(a.toString()):"");return a}})},parseDataLinkId:function(a,b){var c=a.indexOf(".");if(c<0)return false;b.dataLinkId=a.substring(0,c);b.attributeName=
a.substring(c+1);return true},_setupLinkedAttributes:function(){var a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.AttributeGroup;a.owner=this._graphic;a.attributes=this._graphic.attributes;this.linkedAttributes.clear();this.linkedAttributes.addItem(a)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute",null,{name:null,alias:null,displayName:null,value:null,presentableValue:null,visible:null,type:null,constructor:function(a,b,c,d,e,f,g,h){this.value=new Observable(typeof a==="undefined"?"":a);this.name=new Observable(typeof b==="undefined"?"":b);this.alias=new Observable(typeof c==="undefined"?this.name:c);this.displayName=new Observable(typeof d==="undefined"?this.name:d);this.visible=new Observable(typeof e===
"undefined"?true:e);this.type=new Observable(typeof f==="undefined"?"String":f);if(h&&h.mapService)if(c=h.mapService.serviceLayer,c.typeIdField===b){b=a;for(d=0;d<c.types.length;++d)if(c.types[d].id.toString()===a.toString()){b=c.types[d].name;break}this.presentableValue=new Observable(b);return}else if(c.fields){g=null;for(d=0;d<c.fields.length;++d)if(h=c.fields[d],h.name===b&&h.domain&&h.domain.codedValues){for(e=0;e<h.domain.codedValues.length;++e){var i=h.domain.codedValues[e];if(i.code===a){this.presentableValue=
new Observable(i.name);return}}if(g!==null)break}if(!g)for(d=0;d<c.types.length;++d)if(g=c.types[d],g.domains&&g.domains[b]&&g.domains[b].codedValues)for(e=0;e<g.domains[b].codedValues.length;++e)if(g.domains[b].codedValues[e].code===a){g=g.domains[b].codedValues[e].name;this.presentableValue=new Observable(g);return}}this.presentableValue=new Observable(this.processValue(a,f))},processValue:function(a,b){return typeof b!=="undefined"&&b==="DateTime"&&(typeof a==="number"||typeof a==="string"&&a.match(/^\s*-?\d+\s*$/))?
(new Date(a)).toLocaleString():a}});geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute=function(){var a=/.*\.Name\(\)$/;return function(b){return b&&a.test(b)}}();
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureDescriptionPresenterView",geocortex.framework.ui.ViewBase,{_uris:[],_descFormats:{},contentField:null,descriptionGet:function(a){var b=this.contentField=="description"?a.descriptionFormat.get():a.longDescriptionFormat.get(),b=this.cleansedFormatForFormat(b);return a.formatTemplateString(b)},cleansedFormatForFormat:function(a){var b=this;if(a===null)return null;if(a in b._descFormats)return b._descFormats[a];else{anchorPattern=
/<a[^>]*(\/?>)/g;hrefAnchorPattern=/(<a.*?href\s*?=\s*?")(command:.+?)(".*?)(\/?>)/;var c=a.replace(anchorPattern,function(a){var c=a.match(hrefAnchorPattern);return c?'<a _key="'+b.keyForUri(c[2])+'" href="javascript:void(0)" data-binding="{{@event-onclick: handleHyperlinkClick}}{{@event-mouseup: ignoreEvent}}{{@event-mousedown: ignoreEvent}}"'+c[4]:a});return b._descFormats[a]=c}},keyForUri:function(a){var b=dojo.indexOf(this._uris,a);if(!(b>=0))b=this._uris.length,this._uris.push(a);return b},
parseArguments:function(a,b,c){var d={};if(b==="none")return null;else if(b==="string")return this.tryPerformTokenSubstitution(a,c,d)?[d.value]:[a];else if(b==="list"){var e;try{e=dojo.fromJson(a)}catch(f){e=a.split("&")}for(var g=0;g<e.length;g++)if(this.tryPerformTokenSubstitution(e[g],c,d))e[g]=d.value;return e}else{try{g=dojo.fromJson(a)}catch(h){if(a.indexOf("=")<0){if(this.tryPerformTokenSubstitution(a,c,d))return[d.value];this.app.trace.warning("The specified parameter could not be parsed to a valid Object in JSON or Query String format.");
return[null]}g=dojo.queryToObject(a)}for(var i in g)if(g.hasOwnProperty(i)&&typeof g[i]!=="function"&&this.tryPerformTokenSubstitution(g[i],c,d))g[i]=d.value;c=null;b!=="object"&&(b=dojo.getObject(b)(),c=g,g=dojo.safeMixin(b,g));if(c&&g.spatialReference&&!c.spatialReference)g.spatialReference=null;return[g]}},tryPerformTokenSubstitution:function(a,b,c){var d=this;if(a===null||b===null)c.value=null;else if(a==="{$Feature}")return c.value=b,true;else if(a==="{$Graphic}")return c.value=b.esriFeature.get(),
true;else if(a==="{$Geometry}")return c.value=b.esriFeature.get().geometry,true;else if(typeof a==="string"){var e=false,a=a.replace(/{.+?}/g,function(a){e=true;var a=a.substring(1,a.length-1),c=b.esriFeature.get().attributes[a];return c?c:(d.app.trace.warning("The token syntax {{0}} was detected, but could not be matched to a valid replacement.".format(a)),"")});c.value=a;return e}return false},decodeHtmlQuotes:function(a){a=a.replace(/&quot;/g,'"');a=a.replace(/&39;/g,"'");return a=a.replace(/&amp;/g,
"&")},handleHyperlinkClick:function(a,b,c){if(a=this._uris[b.getAttribute("_key")])url=new dojo._Url(a),url.scheme==="command"&&this.runCommand(url.path,url.query,c);return false},ignoreEvent:function(){return false},runCommand:function(a,b,c){var d=this.app.commandRegistry.command(a),e=geocortex.essentialsHtmlViewer.Commands.metadataForCommandName(a);e===null?this.app.trace.warning('The specified command "{0}" has no associated metadata.'.format(a)):e.isHyperlinkable?(arguments=null,b&&(b=this.decodeHtmlQuotes(b),
arguments=this.parseArguments(b,e.arguments,c)),d.execute.apply(d,arguments)):this.app.trace.warning('The specified command "{0}" is not able to be hyperlinked.'.format(a))}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet",null,{id:null,esriFeatureSet:null,layer:null,uniqueId:null,displayName:null,features:null,attributes:null,iconUri:null,extendedProperties:null,isSelectedInCollection:null,_allowUnsafeContent:null,constructor:function(a){var b=null,c=null;if(a&&a.hasOwnProperty("esriFeatureSet"))b=a.esriFeatureSet;if(a&&a.hasOwnProperty("layer"))c=a.layer;this._allowUnsafeContent=a&&a.hasOwnProperty("allowUnsafeContent")?a.allowUnsafeContent:
false;var d=this;this.uniqueId="fs_"+geocortex.framework.utils.alphaNumericToken();this.id="";this.esriFeatureSet=b;if(c&&(this.layer=c)&&this.layer.mapService)this.id="{0}/{1}".format(this.layer.mapService.id,this.layer.id);this.displayName=new Observable;this.displayName.get=function(){return d._displayNameGet()};this.iconUri=new Observable;this.iconUri.get=function(){return d._iconUriGet()};this.features=new ObservableCollection;this.attributes=new ObservableCollection;this.isSelectedInCollection=
new Observable(false);this.extendedProperties=new ObservableCollection;this.loadFeatures();this.loadAttributes()},addFeature:function(a){if(!a)throw Error("Feature cannot be null.");a.featureSet=this;this.features.addItem(a);this.esriFeatureSet&&this.esriFeatureSet.features&&this.esriFeatureSet.features.push(a.esriFeature)},loadGeometries:function(a,b){var c=this,d=new dojo.Deferred;if(!this.layer){var e=Error("loadGeometries: Layer must be present.");geocortex.deferredReject(d,e);typeof callbackErrors==
"function"&&callbackErrors(e);return d}if(!this.layer.primaryKeyField)return e=Error("loadGeometries: Layer must have a PrimaryKeyField to load geometries."),geocortex.deferredReject(d,e),typeof callbackErrors=="function"&&callbackErrors(e),d;var f=this.layer.primaryKeyField.name;a||(a=this.features.getItems());var g=[];if(a){var h;for(h=0;h<a.length;h++)feature=a[h],feature.hasGeometry.get()||(e=feature.esriFeature.get())&&e.attributes[f]&&g.push(feature)}if(g.length>0){e=[];for(h=0;h<g.length;h++)e.push(g[h].esriFeature.get().attributes[f]);
h=new esri.tasks.QueryTask(this.layer.getLayerUrl());var i=new esri.tasks.Query;i.objectIds=e;i.returnGeometry=true;i.outFields=[f];if(this.layer&&this.layer.mapService&&this.layer.mapService.essentialsMap&&this.layer.mapService.essentialsMap.site&&this.layer.mapService.essentialsMap.site.getMap())i.outSpatialReference=this.layer.mapService.essentialsMap.site.getMap().spatialReference;h.execute(i).then(function(a){if(a&&a.features&&a.features.length>0){var e;for(e=0;e<a.features.length;e++){var h=
a.features[e],i=c._findFeature(h.attributes[f],f,g);if(i)i.esriFeature.get().geometry=h.geometry}}geocortex.deferredResolve(d);typeof b=="function"&&b()},function(a){a=Error("loadGeometries: Query error: "+a.message);geocortex.deferredReject(d,a);typeof callbackErrors=="function"&&callbackErrors(a)})}else geocortex.deferredResolve(d),typeof b=="function"&&b();return d},_findFeature:function(a,b,c){var d=null,e,f;if(c&&c.length>0)for(e=0;e<c.length;e++)if((f=c[e].esriFeature.get())&&f.attributes&&
f.attributes[b]==a){d=c[e];break}return d},_displayNameGet:function(){return this.displayName.value?this.displayName.value:this.layer&&this.layer.displayName?this.layer.displayName:""},_iconUriGet:function(){return this.iconUri.value?this.iconUri.value:this.layer&&this.layer.iconUri?this.layer.iconUri:""},loadFeatures:function(){this.features.clear();var a=[],b;if(this.esriFeatureSet&&this.esriFeatureSet.features)for(var c=0;c<this.esriFeatureSet.features.length;++c)b=new Feature({graphic:this.esriFeatureSet.features[c],
layer:this.layer,resolveLayerFields:true,allowUnsafeContent:this._allowUnsafeContent}),b.featureSet=this,a.push(b);this.features.useThrottling=false;this.features.addItems(a);this.features.bind(this,this.featureSetChanged)},loadAttributes:function(){this.attributes.clear();var a=[];if(this.layer&&this.layer.fields)for(var b=0;b<this.layer.fields.length;b++){var c=this.layer.fields[b];geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute.ignoreAttribute(c.name)||a.push(new FeatureAttribute("",
c.name,c.alias,c.displayName,c.visible,null,null,this.layer,c))}else if(this.esriFeatureSet&&this.esriFeatureSet.features&&this.esriFeatureSet.features.length>0)for(c in b=this.esriFeatureSet.features[0],b.attributes)b.attributes.hasOwnProperty(c)&&a.push(new FeatureAttribute("",c,c,c));this.attributes.addItems(a)},featureSetChanged:function(a){if(a.type=="append"||a.type=="insert")for(var b=a.rangeStart;b<=a.rangeEnd;b++)this.features.getAt(b).featureSet=this;if(a.type=="remove"||a.type=="clear")for(b=
a.rangeStart;b<=a.rangeEnd;b++)this.features.getAt(b).featureSet=null},_applyDataLinks:function(a,b,c,d){for(var e=0;e<a.features.length();e++){var f=a.features.getAt(e);if(f.linkedAttributes.length()>0){var g=f.linkedAttributes.getAt(0);f.linkedAttributes.clear();f.linkedAttributes.addItem(g);f.dataLinkingResults.clear()}}for(e=0;e<b.length;e++)for(var g=c[e],h=b[e],i=0;i<g.length;i++){var f=g[i],j=new geocortex.essentialsHtmlViewer.mapping.infrastructure.DataLinkingResult;j.table.set(f.linkedData);
j.dataLink.set(h);f=a.features.getAt(f.index);f.dataLinkingResults.addItem(j);d&&d(f);h.isOneToOne&&f.linkedAttributes.addItem(j.asAttributeGroup())}},resolveDataLinks:function(a,b,c,d,e){var f=this,g=this;b===void 0&&(b=true);if(g.layer&&g.layer.hasDataLinks&&g.features.length()>0)for(var h=[],h=b?dojo.filter(g.layer.dataLinks,function(a){return a.visible}):g.layer.dataLinks,i=[],j=0,k=false,b=0;b<h.length;b++){if(k)break;var l=function(b){return function(e){k||(i[b]=e,j++,j>=h.length&&(f._applyDataLinks(g,
h,i,a),d&&d(g,c)))}}(b);h[b].performDataLinking(g.esriFeatureSet,l,function(a,b){k=true;e&&e(g,b,c)})}else d&&d(g,c)},append:function(a){for(var b={},c=0;c<this.features.length();c++){var d=this.features.getAt(c),e;if(this.layer&&this.layer.primaryKeyField)e=this.layer.primaryKeyField.name;if(e){var f=d.esriFeature.get().attributes[e];b[f]=d}}for(c=0;c<a.features.length();c++){d=a.features.getAt(c);if(a.layer&&a.layer.primaryKeyField)e=a.layer.primaryKeyField.name;e?(f=d.esriFeature.get().attributes[e],
b[f]||this.features.addItem(d)):this.features.addItem(d)}}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",null,{id:null,displayName:null,featureSets:null,sourceName:null,tag:null,extendedProperties:null,constructor:function(){this.id="FSC-{0}".format(geocortex.framework.utils.alphaNumericToken());this.displayName=new Observable("");this.featureSets=new ObservableCollection;this.extendedProperties=new ObservableCollection;this.featureSets.useThrottling=false},getFeatureSetById:function(a){for(var b=0;b<this.featureSets.getLength();++b){var c=
this.featureSets.value[b];if(c.id==a)return c}return null},firstFeature:function(){for(var a=0;a<this.featureSets.value.length;a++){var b=this.featureSets.value[a];if(b.features.value.length>0)return b.features.value[0]}return null},clear:function(){for(var a=0;a<this.featureSets.getLength();a++)this.featureSets.getAt(a).features.clear();this.featureSets.clear()}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager",null,{app:null,featureSetCollections:null,_featureSetCollectionsMap:null,_collectionChangedEventMap:null,_collectionOpenCount:null,constructor:function(a){this.app=a;this.featureSetCollections=new ObservableCollection;this._featureSetCollectionsMap={};this._collectionChangedEventMap={};this._collectionOpenCount={};this._registerCommands()},_registerCommands:function(){this.app.commandRegistry.command("OpenFeatureSetCollection").register(this,
this.openCollection);this.app.commandRegistry.command("CloseFeatureSetCollection").register(this,this.closeCollection);this.app.commandRegistry.command("RemoveCollection").register(this,this.removeCollection);this.app.commandRegistry.command("RemoveFeatureSetCollection").register(this,this.removeCollection);this.app.commandRegistry.command("RemoveCollectionById").register(this,this.removeCollectionById);this.app.commandRegistry.command("RemoveFeatureSetCollectionById").register(this,this.removeCollectionById)},
openCollection:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot open feature set collection '{0}': No feature set collection with matching ID found.".format(a)),null;this._collectionOpenCount.hasOwnProperty(a)||(this._collectionOpenCount[a]=0);++this._collectionOpenCount[a];if(this._collectionOpenCount[a]==1){var b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],
featureSetCollectionId:a});this.app.eventRegistry.event("FSMCollectionOpenedEvent").publish(b)}return this._featureSetCollectionsMap[a]},closeCollection:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot close feature set collection '{0}': No feature set collection with matching ID found.".format(a)),false;if(!this._collectionOpenCount.hasOwnProperty(a)||this._collectionOpenCount[a]==0)return this.app.trace.warning("Attempted to close an already-closed FeatureSetCollection."),
false;--this._collectionOpenCount[a];this._collectionOpenCount[a]==0&&(a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],featureSetCollectionId:a}),this.app.eventRegistry.event("FSMCollectionClosedEvent").publish(a));return true},tryCloseCollection:function(a){return this.isCollectionOpen(a)?this.closeCollection(a):true},isCollectionOpen:function(a){return!this._featureSetCollectionsMap.hasOwnProperty(a)?
(this.app.trace.warning("Cannot check open state of feature set collection '{0}': No feature set collection with matching ID found.".format(a)),false):this._collectionOpenCount.hasOwnProperty(a)&&this._collectionOpenCount[a]>0},addCollection:function(a){return this._addCollectionImpl(a,false)},_addCollectionImpl:function(a){if(this._featureSetCollectionsMap.hasOwnProperty(a.id))return this.app.trace.warning("Cannot add feature set collection '{0}': A feature set collection with that ID already exists.".format(a.id)),
false;this._featureSetCollectionsMap[a.id]=a;this.featureSetCollections.addItem(a);var b=a.featureSets.bind(this,this.handleCollectionChanged);this._collectionChangedEventMap[a]=b;a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a.id],featureSetCollectionId:a.id});this.app.eventRegistry.event("FSMCollectionAddedEvent").publish(a);return true},handleCollectionChanged:function(a){var b=null,b=a.isObservable?
a:a.sender;b!=null&&this.getCollectionById(b.id)&&(a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:b,featureSetCollectionId:b.id,collectionChangedEventArgs:a}),this.app.eventRegistry.event("FSMCollectionChangedEvent").publish(a))},removeCollection:function(a){return this.canRemoveCollection(a)?(this.removeCollectionById(a.id),true):false},removeCollectionById:function(a){if(!this._featureSetCollectionsMap.hasOwnProperty(a))return this.app.trace.warning("Cannot remove feature set collection '{0}': Collection not found.".format(a)),
false;this.isCollectionOpen(a)&&this.closeCollection(a);var b=this._featureSetCollectionsMap[a];b.featureSets.unbind(this._collectionChangedEventMap[b]);this.featureSetCollections.removeItem(this._featureSetCollectionsMap[a]);Array.removeItem(this._collectionOpenCount,this._collectionOpenCount[a]);b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs({sender:this,featureSetCollection:this._featureSetCollectionsMap[a],featureSetCollectionId:a});this.app.eventRegistry.event("FSMCollectionRemovedEvent").publish(b);
Array.removeItem(this._featureSetCollectionsMap,this._featureSetCollectionsMap[a]);return true},canRemoveCollection:function(a){return a!=null&&this.getCollectionById(a.id)!=null},getCollectionById:function(a){return this._featureSetCollectionsMap[a]},getCollectionIds:function(){var a=[],b;for(b in this._featureSetCollectionsMap)this._featureSetCollectionsMap.hasOwnProperty(b)&&a.push(b);return a}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManagerEventArgs",null,{sender:null,featureSetCollection:null,featureSetCollectionId:null,constructor:function(a){dojo.safeMixin(this,a)}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.GeometryUtils,{getMiddle:function(a){if(!a||!a.type)return null;if(a.type=="point")return a;else if(a.type=="multipoint"){var b=Math.floor(a.points.length/2),b=a.points[b];return new esri.geometry.Point(b[0],b[1],a.spatialReference)}else if(a.type=="polyline")return b=Math.floor(a.paths[0].length/2),b=a.paths[0][b],new esri.geometry.Point(b[0],b[1],a.spatialReference);else if(a.type=="polygon")return a.getExtent().getCenter();else if(a.type==
"extent")return a.getCenter();return null},getEsriGeometryType:function(a,b){if(!a)return null;var c=null;switch(a.toLowerCase()){case "rectangle":c=esri.toolbars.Draw.EXTENT;break;case "freehandpolygon":c=esri.toolbars.Draw.FREEHAND_POLYGON;break;case "freehandpolyline":c=esri.toolbars.Draw.FREEHAND_POLYLINE;break;case "mappoint":c=esri.toolbars.Draw.POINT;break;case "multipoint":c=esri.toolbars.Draw.MULTI_POINT;break;case "polygon":c=esri.toolbars.Draw.POLYGON;break;case "polyline":c=esri.toolbars.Draw.POLYLINE;
break;default:c=b||esri.toolbars.Draw.EXTENT}return c},_getGeometryService:function(a){var b=null;if(this._geometryService)return this._geometryService;else if(a&&a.configuration&&a.configuration.geometryServiceUrl)b=this._geometryService=new esri.tasks.GeometryService(a.configuration.geometryServiceUrl);return b},needsProjection:function(a,b){return geocortex.essentials.GeometryUtilities.spatialRefsAreEqual(a.spatialReference,b.map.spatialReference,false)?false:true},project:function(a,b,c,d){if(!a||
esri.tasks.hasOwnProperty("ProjectParameters")&&!a instanceof esri.tasks.ProjectParameters||!a.hasOwnProperty("outSR")||!a.hasOwnProperty("geometries"))c&&dojo.isFunction(c)&&c(Error("projectParameters required."));else if(!b||!dojo.isFunction(b))c&&dojo.isFunction(c)&&c(Error("callback required."));else if(a.outSR){var e=a.geometries,f=false;e&&e.length>0&&(geocortex.essentials.GeometryUtilities.spatialRefsAreEqual(e[0].spatialReference,a.outSR,false)||(f=true));f?(f=this._getGeometryService(d),
a.outSR.isWebMercator()&&e[0].spatialReference.wkid===4326||a.outSR.wkid===4326&&e[0].spatialReference.isWebMercator()?this._projectLocally(a.geometries,a.outSR,b,c):d&&d.isOffline&&d.isOffline.get()&&!d.isNative.get()?(a="An operation requiring projection attempted to project while offline, but was not between WebMercator and WGS84",c&&dojo.isFunction(c)&&c(Error(a))):f?esri.tasks.hasOwnProperty("ProjectParameters")?f.project(a,b,c):f.project(a.geometries,a.outSR,b,c):c&&dojo.isFunction(c)&&c(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application."))):
b(e)}else c&&dojo.isFunction(c)&&c(Error("output spatial reference is required."))},simplifyPolygons:function(a,b,c,d){this._getGeometryService(d).simplify(a,b,c)},simplifyPolygon:function(a,b,c,d){this.simplifyPolygons([a],function(a){a&&a.length>0?b(a[0]):c()},c,d)},_projectLocally:function(a,b,c,d){for(var e=[],f=0;f<a.length;f++)a[f].spatialReference.isWebMercator()&&b.wkid===4326?e[f]=esri.geometry.webMercatorToGeographic(a[f]):a[f].spatialReference.wkid===4326&&b.isWebMercator()?e[f]=esri.geometry.geographicToWebMercator(a[f]):
(d&&dojo.isFunction(d)&&d(Error("Unable to get the geometry service. Make sure a geometry service url is configured in the application.")),this.app.trace.error("An operation requiring projection attempted to project while offline, but was not between WebMercator and WGS84"));c(e)},createCircle:function(a,b,c,d){for(var e=[],f=null,d=d||40,a=new esri.geometry.Polygon(a),f=360/d,g=1;g<=d;g++){var h=g*f*Math.PI/180;e.push([b.x+c*Math.cos(h),b.y+c*Math.sin(h)])}e.push(e[0]);a.addRing(e);return a}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.GraphicUtils,{_layerIDMap:{},sanitizeAttributeNames:function(a,b){var c;if(this._layerIDMap[b.id])c=this._layerIDMap[b.id];else{c={};for(var d=0;d<b.fields.length;d++){var e=b.fields[d];c[e.alias]=e.name}this._layerIDMap[b.id]=c}var d=[],f;for(f in c)c.hasOwnProperty(f)&&a.attributes.hasOwnProperty(f)&&(a.attributes[f]==="Null"&&(a.attributes[f]=null),e=a.attributes[f],e!==void 0&&(e={alias:f,name:c[f],value:e},e.alias!=e.name&&d.push(e)));
for(c=0;c<d.length;c++)f=d[c],Array.removeItem(a.attributes,a.attributes[f.alias]),a.attributes[f.name]=f.value}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.HighlightManager");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.HighlightManager",null,{app:null,_activeHighlightLayerName:null,_highlightLayers:null,_managedGraphics:null,_clonedGraphics:null,_nextHighlightId:null,_defaultRenderer:null,_defaultHighlightLayerName:null,constructor:function(a){this.app=a;this._highlightLayers={};this._managedGraphics={};this._clonedGraphics={};this._nextHighlightId=0;this._defaultRenderer=new geocortex.essentialsHtmlViewer.mapping.infrastructure.SimpleRenderer},
createHighlightLayer:function(a,b,c){if(!a)throw Error("Unable to create new highlight layer with null or empty name");if(this._highlightLayers.hasOwnProperty(a))this.app.trace.warning("Cannot create highlight layer because layer with name '{0}' already exists.".format(a));else{var d=new esri.layers.GraphicsLayer;if(b!==null&&b!==void 0||c!==null&&c!==void 0){d.renderer=this._defaultRenderer.clone();if(b!==null&&b!==void 0)d.renderer.fillColor=typeof b=="string"?this.getColorFromString(b):this.getColorFromList(b);
if(c!==null&&c!==void 0)d.renderer.borderColor=typeof b=="string"?this.getColorFromString(c):this.getColorFromList(c)}this._highlightLayers[a]=d;this._addLayerToMap(d);if(!this._activeHighlightLayerName||this._activeHighlightLayerName==="")this._activeHighlightLayerName=a;this.app.eventRegistry.event("HighlightLayerCreated").publish(a);return d}},setActiveHighlightLayer:function(a){if(!a)throw Error("Unable to set the active highlight layer because no layer name was given.");if(!this._highlightLayers.hasOwnProperty(a))throw Error("Unable to set {0} as the active highlight layer, because a highlight layer with that name does not exist".format(a));
this._activeHighlightLayerName=a},highlightEsriFeatureSet:function(a,b){if(a){var c=this.getHighlightLayerOrActive(b);(!c||!c.graphics)&&this.app.trace.warning("Unable to highlight feature because the required layer was not found, or could not accept graphics");for(var d=0;d<a.features.length;d++)this._drawGraphic(a.features[d],c)}else this.app.trace.warning("No FeatureSet was provided, as such, no features were highlighted")},highlightFeatures:function(a,b){if(a){var c=this.getHighlightLayerOrActive(b);
c||this.app.trace.warning("Unable to highlight feature because the required layer was not found, or could not accept graphics");for(var d=this._defaultRenderer.borderColor,e=this._defaultRenderer.fillColor,f=0;f<a.length;f++){var g=a[f];try{var h;g.borderColor&&g.borderColor.get()&&(h=this.getColorFromList(g.borderColor.get()))&&this._setBorderColor(h);g.fillColor&&g.fillColor.get()&&(h=this.getColorFromList(g.fillColor.get()))&&this._setFillColor(h);this._drawGraphic(g.esriFeature.get(),c)}finally{this._setBorderColor(d),
this._setFillColor(e)}}}else this.app.trace.warning("No Features were provided, as such, no features were highlighted")},removeHighlightLayer:function(a){if(!a)throw Error("Unable to remove a highlight layer with null or empty name");if(!this._highlightLayers.hasOwnProperty(a))throw Error("Cannot remove highlight layer because layer with name {0} does not exist.".format(a));var b=this._highlightLayers[a];this.clearHighlights(b);this.app.map.removeLayer(b);delete this._highlightLayers[a];if(this._activeHighlightLayerName===
a)this._activeHighlightLayerName=null},clearHighlights:function(a){var b=null;if(!a&&this._activeHighlightLayerName)b=this._activeHighlightLayerName;var c=null;if(b||typeof a=="string")b||(b=a),c=this.getHighlightLayer(b);if(c||typeof a=="object"&&a.isInstanceOf&&a.isInstanceOf(esri.layers.GraphicsLayer))if(c||(c=a),c.graphics)for(a=c.graphics.length-1;a>=0;a--)this._removeClonedGraphic(c.graphics[a]);else this.app.trace.warning("An attempt was made to clear a highlight layer which contained no graphics")},
setHighlightFillColor:function(a){this._setFillColor(this.getColorFromString(a))},setHighlightBorderColor:function(a){this._setBorderColor(this.getColorFromString(a))},getColorFromList:function(a){if(a&&a.length===4)return a[3]>1&&(a[3]/=255),new dojo.Color(a);else if(a&&a.length===3)return new dojo.Color(a);return null},getColorFromString:function(a){if(typeof a==="string"&&a.startsWith("#")&&a.length===9){var b=parseInt(a.slice(1,3),16),c=parseInt(a.slice(3,5),16),d=parseInt(a.slice(5,7),16),a=
parseInt(a.slice(7,9),16);b/=255;return new dojo.Color([c,d,a,b])}else return new dojo.Color(a)},getHighlightLayer:function(a){return!a?(this.app.trace.warning("Unable to get a highlight layer with null or empty name"),null):this._highlightLayers[a]},getHighlightLayerOrActive:function(a){return a?this.getHighlightLayer(a):this._activeHighlightLayer()},activeHighlightLayerGraphics:function(){var a=this._activeHighlightLayer();return a&&a.graphics?a.graphics.slice(0):null},defaultHighlightLayerGraphics:function(){var a=
this.getHighlightLayer(this._defaultHighlightLayerName);return a?a.graphics.slice(0):null},_drawGraphic:function(a,b){if(a&&b){this._showHighlightLayer(b);if(!a.__gcxHlId)a.__gcxHlId=this._nextId();var c;this._managedGraphics.hasOwnProperty(a.__gcxHlId)?c=this._managedGraphics[a.__gcxHlId]:(c=[],this._managedGraphics[a.__gcxHlId]=c);for(var d=0;d<c.length;d++)if(c[d].layer===b)return;d={layer:b,managedGraphic:a};c.push(d);c=new esri.Graphic;c.attributes={};for(key in a.attributes)a.attributes.hasOwnProperty(key)&&
(c.attributes[key]=a.attributes[key]);c.geometry=a.geometry;c.__gcxHlId=this._nextId();d.clonedGraphic=c;this._clonedGraphics[c.__gcxHlId]=d;if(c.geometry){if(!b.renderer)c.symbol=this._defaultRenderer.getSymbol(c);b.add(c)}}},_getFillColor:function(){return this._defaultRenderer.fillColor},_setFillColor:function(a){this._defaultRenderer.fillColor=a},_getBorderColor:function(){return this._defaultRenderer.borderColor},_setBorderColor:function(a){this._defaultRenderer.borderColor=a},_nextId:function(){return"gcx_hl_"+
this._nextHighlightId++},_showHighlightLayer:function(a){this.app.map.reorderLayer(a,this.app.map.graphicsLayerIds.length-1);a!=this._highlightLayers[this._defaultHighlightLayerName]&&this.app.map.reorderLayer(this._highlightLayers[this._defaultHighlightLayerName],this.app.map.graphicsLayerIds.length-1)},_addLayerToMap:function(a){this.app.map.addLayer(a)},_activeHighlightLayer:function(){return this._activeHighlightLayerName?this.getHighlightLayer(this._activeHighlightLayerName):null},_removeClonedGraphic:function(a){this._clonedGraphics.hasOwnProperty(a.__gcxHlId)&&
(a=this._clonedGraphics[a.__gcxHlId],this._removeManagedGraphic(a.managedGraphic,a.layer))},_removeManagedGraphic:function(a,b){if(this._managedGraphics.hasOwnProperty(a.__gcxHlId)){for(var c=this._managedGraphics[a.__gcxHlId],d=null,e=0;e<c.length;e++)if(c[e].layer===b){d=c[e];break}d&&(b.remove(d.clonedGraphic),delete this._clonedGraphics[d.clonedGraphic.__gcxHlId],d=c.indexOf(d),c.splice(d,1),c.length===0&&delete this._managedGraphics[a.__gcxHlId])}}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.MapUtils,{stepZoom:function(a,b,c){if(c==null)c=a.extent;b=geocortex.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(c,1/b);a.setExtent(b);return b},stepZoomWithPriority:function(a,b,c,d,e){if(c==null)c=a.getMap().extent;b=geocortex.essentials.GeometryUtilities.scaleEnvelopeWithoutTranslation(c,1/b);a.essentialsMap.extentManager.setExtentWithPriority(b,d,e);return b},getExtent:function(a){return a?a.type=="point"?new esri.geometry.Extent(a.x,
a.y,a.x,a.y,a.spatialReference):a.getExtent():null},panToPointWithPriority:function(a,b,c,d,e){b&&b.isInstanceOf(esri.geometry.Geometry)&&(b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs([b],function(b){var g=null;b&&b.length>0&&(g=b[0]);a.map&&g&&((e||e===void 0)&&a.commandRegistry.command("ShowMap").execute(),g.type=="point"?a.site.essentialsMap.extentManager.centerAtWithPriority(g,c,d):g.type=="extent"?a.site.essentialsMap.extentManager.centerAtWithPriority(g.getCenter(),
c,d):(g.type=="polyline"||g.type=="polygon"||g.type=="multipoint")&&a.site.essentialsMap.extentManager.centerAtWithPriority(g.getExtent().getCenter(),c,d))},function(b){a.trace.warning("PanToPoint: "+b.message)}),a.commandRegistry.command("Project").execute(b))},zoomToExtentWithPriority:function(a,b,c,d,e){var f=function(b){b&&b.length>0&&((e||e===void 0)&&a.commandRegistry.command("ShowMap").execute(),a.site.essentialsMap.extentManager.setExtentWithPriority(b[0],c,d),a.eventRegistry.event("MapStartupExtentChangedEvent").publish(b[0]))};
if(b&&b.isInstanceOf(esri.geometry.Extent))if(!b.spatialReference&&a.map.spatialReference)b.spatialReference=a.map.spatialReference,f([b]);else{if(b.spatialReference&&!b.spatialReference.toJson&&(b.spatialReference.wkid||b.spatialReference.wkt))b.spatialReference=new esri.SpatialReference(b.spatialReference);b=new geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs([b],f,function(b){a.trace.warning("ZoomToExtent: "+b.message)});a.commandRegistry.command("Project").execute(b)}},
cloneEsriFeature:function(a){var b=new esri.Graphic(a.toJson());b._graphicsLayer=a._graphicsLayer;return b},esriFeaturesEqual:function(a,b){if(a===b)return true;var c=["__editingMeta","timestamp"],d=function(a){var b=0,d;for(d in a)!Array.contains(c,d)&&a.hasOwnProperty(d)&&++b;return b};if(d(a.attributes)!==d(b.attributes))return false;var d=0,e=[],f=[],g;for(g in a.attributes){var h=Array.contains(c,g);if(!h&&(!a.attributes.hasOwnProperty(g)||!b.attributes.hasOwnProperty(g)))return false;h||(e.push(g),
f.push(g),++d)}for(g=0;g<d;++g)if(e[g]!==f[g])return false;return true},findFeatureInLayer:function(a,b){if(!a||!b)return null;var c=b.objectIdField,d=b.graphics;if(d.length<1)return null;var e=["__editingMeta","timestamp"];if(b.editFieldsInfo)for(var f in b.editFieldsInfo)b.editFieldsInfo.hasOwnProperty(f)&&e.push(b.editFieldsInfo[f]);f=function(a){var b=0,c;for(c in a)!Array.contains(e,c)&&a.hasOwnProperty(c)&&++b;return b};var g=d[0].attributes;if(f(g)!==f(a.attributes))return null;var h=0,i=[],
j=[],k;for(k in g){var l=Array.contains(e,k);if(!l&&(!g.hasOwnProperty(k)||!a.attributes.hasOwnProperty(k)))return null;l||(i.push(k),j.push(k),++h)}for(k=0;k<h;++k)if(i[k]!==j[k])return null;for(h=0;h<d.length;h++)if(i=d[h],f(g)===f(a.attributes)&&i.attributes[c]===a.attributes[c])return i._graphicsLayer=b,i;return null},findFeatureInMap:function(a,b,c){var d=null;if(c&&(d=this._findFeatureInLayer(a,this.layerHint)))return d._graphicsLayer=this.layerHint,d;for(var b=b.getFeatureServices(),e=0;e<
b.length;e++){var f=b[e].serviceLayer;if(!(c&&f===c)&&(d=this.findFeatureInLayer(a,f)))break}return d},cloneEsriFeature:function(a){var b=new esri.Graphic(a.toJson());b._graphicsLayer=a._graphicsLayer;return b},esriFeaturesEqual:function(a,b){if(a===b)return true;var c=["__editingMeta","timestamp"],d=function(a){var b=0,d;for(d in a)!Array.contains(c,d)&&a.hasOwnProperty(d)&&++b;return b};if(d(a.attributes)!==d(b.attributes))return false;var d=0,e=[],f=[],g;for(g in a.attributes){var h=Array.contains(c,
g);if(!h&&(!a.attributes.hasOwnProperty(g)||!b.attributes.hasOwnProperty(g)))return false;h||(e.push(g),f.push(g),++d)}for(g=0;g<d;++g)if(e[g]!==f[g])return false;return true}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs",null,{elementID:null,mapPoint:null,content:null,title:null,delay:0,constructor:function(a,b,c,d){this.elementID=a;this.mapPoint=b;this.content=c;this.title=d},getNode:function(){if(this.content){if(this.contentIsView())return this.content.root;if(this.content.nodeName)return this.content;if(typeof this.content==="string"){var a=dojo.create("div");$(a).html(this.content);return a}}return null},contentIsView:function(){return this.content&&
this.content instanceof geocortex.framework.ui.ViewBase}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.SimpleRenderer",null,{fillColor:null,borderColor:null,constructor:function(){this.fillColor=new dojo.Color([236,236,0,0.22745]);this.borderColor=new dojo.Color([204,204,51,1])},clone:function(){var a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.SimpleRenderer;a.fillColor=this.fillColor;a.borderColor=this.borderColor;return a},getSymbol:function(a){var b=null;a.geometry&&a.geometry.isInstanceOf&&(a.geometry.isInstanceOf(esri.geometry.Point)||
a.geometry.isInstanceOf(esri.geometry.Multipoint)?b=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,10,null,this.borderColor):a.geometry.isInstanceOf(esri.geometry.Polygon)?b=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,this.borderColor,2),this.fillColor):a.geometry.isInstanceOf(esri.geometry.Polyline)&&(b=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,
this.borderColor,5)));return b}});dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.SymbolUtils",null,{});
dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.SymbolUtils,{_defaultSymbolColor:{r:204,g:51,b:51,a:1},defaultSymbolColor:function(a){var b={};a||(a={});b.a=a.a?a.a:this._defaultSymbolColor.a;b.r=a.r?a.r:this._defaultSymbolColor.r;b.g=a.g?a.g:this._defaultSymbolColor.g;b.b=a.b?a.b:this._defaultSymbolColor.b;return new dojo.Color(b)},defaultMarkerSymbol:function(){return new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,14,null,this.defaultSymbolColor())},
defaultLineSymbol:function(){return new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,this.defaultSymbolColor({a:0.8}),2)},defaultFillSymbol:function(){return new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,this.defaultLineSymbol(),this.defaultSymbolColor({a:0.5}))},defaultTextSymbol:function(){var a=new esri.symbol.TextSymbol(""),b=new esri.symbol.Font;b.setSize("14.0");b.setFamily("Arial");a.setFont(b);a.setAlign(esri.symbol.TextSymbol.ALIGN_START);
return a}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.AddStatusArgs",null,{text:null,imageUri:null,userClosedCallback:null,imageClass:null,id:null,timeoutMS:null,showBusyIcon:null,constructor:function(a,b,c,d,e,f,g){this.text=a;this.imageUri=b;this.userClosedCallback=c;this.imageClass=d;this.id=e;this.timeoutMS=f?f:3E4;this.showBusyIcon=g}});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs",null,{constructor:function(a,b,c,d,e){this.geometries=a;this.outputSpatialReference=d;this.callback=b;this.errback=c;this.transformation=e},outputSpatialReference:null,geometries:null,transformation:null,callback:null,errback:null});dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.GeolocationEventArgs",null,{mapPoint:null,constructor:function(){}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.eventArgs.MapExtentEventArgs",null,{centerLatLon:null,currentScale:null,currentResolution:null,constructor:function(){}});var geocortex;
(function(a){(function(a){(function(a){(function(a){(function(a){var b=function(){return function(a){this.esriLayer=a;this.templateType="single-item";this.swatchElement=null;this.label=new Observable("");this.description=new Observable("");this.isVisible=new Observable(true);this.expanded=new Observable(true);this.expanderClass=new Observable;this.children=new ObservableCollection;this.expanderClass.syncTransform(this.expanded,function(a){return a?"tree-expander expanded":"tree-expander collapsed"});
this.expanded.pulse()}}();a.LegendItem=b})(a.legend||(a.legend={}))})(a.infrastructure||(a.infrastructure={}))})(a.mapping||(a.mapping={}))})(a.essentialsHtmlViewer||(a.essentialsHtmlViewer={}))})(geocortex||(geocortex={}));
(function(a){(function(a){(function(a){(function(a){(function(a){var b=function(){return function(a,b){this.identifier=a;this._provider=b}}();a.LegendItemProviderEntry=b})(a.legend||(a.legend={}))})(a.infrastructure||(a.infrastructure={}))})(a.mapping||(a.mapping={}))})(a.essentialsHtmlViewer||(a.essentialsHtmlViewer={}))})(geocortex||(geocortex={}));
(function(a){(function(a){(function(a){(function(a){(function(a){var b=function(){function a(){}a.registerLegendItemProvider=function(a){this._providers.push(a)};a.getProviders=function(){return this._providers};a._providers=[];return a}();a.LegendItemProviderFactory=b})(a.legend||(a.legend={}))})(a.infrastructure||(a.infrastructure={}))})(a.mapping||(a.mapping={}))})(a.essentialsHtmlViewer||(a.essentialsHtmlViewer={}))})(geocortex||(geocortex={}));
(function(a){(function(a){(function(a){(function(a){(function(a){(function(a){a[a.NotFound=0]="NotFound";a[a.Rendered=1]="Rendered";a[a.Show=2]="Show";a[a.Hide=3]="Hide";a[a.Pending=4]="Pending";a[a.Error=5]="Error"})(a.LegendItemProviderResponseCode||(a.LegendItemProviderResponseCode={}));var b=function(){return function(a,b){this.code=a;this.item=b}}();a.LegendItemProviderResponse=b})(a.legend||(a.legend={}))})(a.infrastructure||(a.infrastructure={}))})(a.mapping||(a.mapping={}))})(a.essentialsHtmlViewer||
(a.essentialsHtmlViewer={}))})(geocortex||(geocortex={}));
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.BatchItemBase",null,{constructor:function(a,b){this.app=a;b&&b.hasOwnProperty("command")?(this.command=a.commandRegistry.command(b.command),this.commandParameter=b.hasOwnProperty("commandParameter")?new Observable(b.commandParameter):new Observable,this.abortBatchOnFailure=b.hasOwnProperty("abortBatchOnFailure")?new Observable(!!b.abortBatchOnFailure):new Observable(false)):(this.command=null,this.commandParameter=new Observable,
this.abortBatchOnFailure=new Observable(false))},app:null,commandParameter:null,command:null,abortBatchOnFailure:false});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuBase",null,{constructor:function(a,b){if(b)this.app=a,this.id=new Observable(b.id),this.moduleId=new Observable(b.moduleId),this.description=new Observable(b.description),this.items=this.getMenuItems(b.items),this.defaultIconUri=new Observable(b.defaultIconUri);else throw Error("Menu item properties cannot be null");},getMenuItems:function(a){var b=this,c=new ObservableCollection;dojo.forEach(a,function(a){if((a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuItemBase(b.app,
a))&&a.text)c.addItem(a);else throw Error("Failed to create menu items");});return c},app:null,id:null,items:null,moduleId:null,description:null,defaultIconUri:null,setId:function(a){this.id.set(a)},setModuleId:function(a){this.moduleId.set(a)},setMenuItems:function(a){this.items=new ObservableCollection;this.items.clear();this.items.addItems(a)}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuItemBase",null,{constructor:function(a,b){if(b){this.app=a;this.text=new Observable(b.text);this.description=new Observable(b.description);this.hideOnDisable=new Observable(b.hideOnDisable);this.iconUri=new Observable(b.iconUri);this.batchItems=new ObservableCollection;if(b.command)this.command=new Observable(b.command),this.commandParameter=b.commandParameter?new Observable(b.commandParameter):new Observable;b.batch&&this._setBatchItems(b.batch)}else throw Error("Menu cannot be null");
},app:null,text:null,description:null,batchItems:null,hideOnDisable:null,iconUri:null,command:null,commandParameter:null,_setBatchItems:function(a){var b=this;dojo.forEach(a,function(a){var d=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.BatchItemBase");if(d)if(a=new d(b.app,a))b.batchItems.addItems(a);else throw Error("Failed to create batch items");})},execute:function(a){if(this.command){var b=this.commandParameter.get();b==null&&(b=a);this.app.commandRegistry.command(this.command.get()).execute(b)}this.batchItems.isEmpty()||
dojo.forEach(this.batchItems.get(),function(b){var d=b.commandParameter.get();d==null&&(d=a);b.command.execute(d)})}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuRegistry",null,{constructor:function(a){this._app=a;this.menusList=new ObservableCollection;this._menuConfig=[]},_app:null,menusList:null,_menuConfig:null,getMenu:function(a){this._loadMenuFromConfig(a);for(var b=[],c=0;c<this.menusList.getLength();c++)this.menusList.getAt(c).id.get()==a&&(b=b.concat(this.menusList.getAt(c).items.get()));return b},getDefaultIconUri:function(a){for(var b=0;b<this.menusList.getLength();b++)if(this.menusList.getAt(b).id.get()==
a)return a=this.menusList.getAt(b).defaultIconUri.get();return null},getMenuByModuleId:function(a){for(var b=[],c=0;c<this.menusList.getLength();c++)this.menusList.getAt(c).moduleId.get()===a&&(b=b.concat(this.menusList.getAt(c).items.get()));return b},getMenuIndex:function(a,b){if(!this.menusList.isEmpty())for(var c=0;c<this.menusList.getLength();c++)if(this.menusList.getAt(c).id.get()===a&&this.menusList.getAt(c).moduleId.get()===b)return c;return null},getMenuConfigIndices:function(a){for(var b=
[],c=0;c<this._menuConfig.length;c++)this._menuConfig[c].id===a&&b.push(c);return b},loadMenus:function(a){var b=this;a.menus&&dojo.forEach(a.menus,function(a){b._menuConfig.push(a);b._loadMenuFromConfig(a.id)})},_loadMenuFromConfig:function(a){a=this.getMenuConfigIndices(a);if(a.length>0)for(var b=0;b<a.length;b++){var c=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuBase(this._app,this._menuConfig[a[b]]);if(c)this.register(c);else throw Error("Failed to create the menu: ");
}},register:function(a){var b=a.id;a&&b&&(this.unregister(a.id.get(),a.moduleId.get()),this.menusList.addItems(a))},unregister:function(a,b){var c=this.getMenuIndex(a,b);c!=null&&this.menusList.get().splice(c,1)},enumMenus:function(){return this.menusList.get()}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuView",geocortex.framework.ui.ViewBase,{menuItems:null,executableMenuItems:null,hideDisabled:null,_canExecuteBindingTokens:null,menuContext:null,constructor:function(){this.menuItems=new ObservableCollection([]);this.executableMenuItems=new ObservableCollection([]);this.menuContext=new Observable;this._canExecuteBindingTokens={};this.auto(this.menuItems,this,this._handleMenuItemsChanged);this.auto(this.menuContext,this,this._handleContextChanged)},
attach:function(a){var b=this;if(!a||!this.configuration||!this.configuration.menuId)this.app.trace.warning("Could not set up menu view '{0}'. View model or 'menuId' option not found.".format(this.id));else{a.menuItems=this.executableMenuItems;var c=this.configuration.menuId;try{var d=this.app.menuRegistry.getMenu(c),e=[];this.menuItems.clear();var f=this.app.menuRegistry.getDefaultIconUri(c);if(d)for(c=0;c<d.length;++c){var g=d[c];f&&!g.iconUri.get()&&g.iconUri.set(f);var h=g.hasOwnProperty("commandParameter")?
g.commandParameter.get():null,i=g.command;if(i&&i.get()){var i=i.get(),j=new geocortex.essentialsHtmlViewer.mapping.modules.command.CommandViewModel(this.app,this.libraryId,i,h);this._setCommandViewModelClass(j,j.canExecute.get());this.auto(j.canExecute,j,function(a){this.cssClass.set(a?"list-menu-item":"list-menu-item disabled");this.hideOnDisable.get()&&b._computeExecutableMenuItems()});dojo.safeMixin(j,g)}else{j=new geocortex.essentialsHtmlViewer.mapping.modules.command.CommandViewModel(this.app,
this.libraryId,null,h);dojo.safeMixin(j,g);if(j.batchItems)for(var k=0;k<j.batchItems.getLength();++k){var l=j.batchItems.getAt(k);l.command&&(b=this,function(){var a=j;l.command.canExecuteChanged.subscribe(this,function(){b._handleBatchItemCanExecuteChanged(a,arguments)})}())}this._handleBatchItemCanExecuteChanged(j)}e.push(j)}this.menuItems.addItems(e)}catch(m){return this.app.trace.error("Error parsing menu configuration: {0}.".format(m)),false}this.inherited(arguments)}},_handleBatchItemCanExecuteChanged:function(a,
b){for(var c=false,d=0;d<a.batchItems.getLength();++d){var e=a.batchItems.getAt(d);if(e.abortBatchOnFailure.get()&&(c=!e.command.canExecute(b)))break}c?(this._setCommandViewModelClass(a,!c),a.hideOnDisable.get()&&this._computeExecutableMenuItems()):this._setCommandViewModelClass(a,true)},_setCommandViewModelClass:function(a,b){a.cssClass.set(b?"list-menu-item":"list-menu-item disabled")},_handleContextChanged:function(a){for(var b=0;b<this.menuItems.length();b++)this.menuItems.getAt(b).applyContext(a)},
_handleMenuItemsChanged:function(a){a.type==="clear"&&this.executableMenuItems.clear();if(a.type==="append")this._computeExecutableMenuItems();else if(a.type==="remove")for(var a=a.sender.get().slice(a.rangeStart,a.rangeEnd+1),b=0;b<a.length;b++)this.executableMenuItems.removeItem(element[b]);else a.type==="insert"&&this._computeExecutableMenuItems()},_computeExecutableMenuItems:function(){for(var a=0,b=0;b<this.menuItems.length();b++){var c=this.menuItems.getAt(b),d=this.executableMenuItems.indexOf(c);
if(d<0){if(c.canExecute.get()||!c.hideOnDisable.get())this.executableMenuItems.insertItem(a,c),a++}else c.hideOnDisable.get()&&!c.canExecute.get()?this.executableMenuItems.removeAt(d):a++}},handleMenuItemClick:function(a,b,c){a=c.commandParameter?c.commandParameter.get():null;if(a===null||a===void 0)a=this.menuContext.get();(!c._command||c._command.canExecute(a))&&c.execute(a)},getDescription:function(a,b,c){if(c.description)b.title=c.description.get()}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchManager",null,{constructor:function(a){this.app=a;this._searchProviders=[];this._registerCommands();this.app.eventRegistry.event("SearchInProgressEvent").subscribe(this,this._searchProgress)},app:null,_searchProviders:null,_fscRootID:"SearchResultsCollection",_fsc:null,_count:0,_fscSourceName:"Search",_resetFeatureSetCollection:function(){this._fsc?(this._fsc.clear(),this.app.featureSetManager.tryCloseCollection(this._fsc.id)):
(this._fsc=new FeatureSetCollection,this._fsc.id=this._fscRootID,this._fsc.sourceName=this._fscSourceName,this.app.featureSetManager.addCollection(this._fsc))},_registerCommands:function(){this.app.commandRegistry.command("RegisterSearchProvider").register(this,this._registerProvider);this.app.commandRegistry.command("Search").register(this,this._search);this.app.commandRegistry.command("GlobalSearch").register(this,this._search);this.app.commandRegistry.command("CancelSearch").register(this,this._cancelSearch);
this.app.commandRegistry.command("ClearSearch").register(this,this._clearSearch)},_registerProvider:function(a){if(!a)throw Error("Search Provider cannot be null.");for(var b=0;b<this._searchProviders.length;b++)if(this._searchProviders[b].id==a.id)throw Error("Search Provider '{0}' already registered.".format(a.name));this._searchProviders.push(a)},_enabledProviders:function(){for(var a=[],b=0;b<this._searchProviders.length;b++){var c=this._searchProviders[b];c.isEnabled&&(this.app.isOffline.get()===
true?c.supportsOffline&&a.push(c):a.push(c))}return a},_isSearching:function(){for(var a=0;a<this._searchProviders.length;a++)if(this._searchProviders[a].status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING)return true;return false},_cancelSearch:function(){if(this._isSearching())for(var a=0;a<this._searchProviders.length;a++){var b=this._searchProviders[a];b.status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING&&b.cancelSearch()}},
_clearSearch:function(){this._isSearching()&&this._cancelSearch();this._resetFeatureSetCollection()},_search:function(a){this._isSearching()&&this._cancelSearch();this._resetFeatureSetCollection();if(!a||a.replace(/ /g,"")=="")this.app.trace.warning("Cannot perform search without search text.");else{var b=this._enabledProviders();if(b.length==0)this.app.trace.warning("No search providers enabled.");else{this._fsc.displayName.set(this.app.getResource("Mapping","language-search-fsc-display-name").format(a));
this.app.featureSetManager.isCollectionOpen(this._fsc.id)||this.app.featureSetManager.openCollection(this._fsc.id);for(var c=0;c<b.length;c++)b[c].search(this._fsc,a)}}},_searchProgress:function(a){var b=true;if(a.status!=geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING){for(var c=0;c<this._searchProviders.length;c++)this._searchProviders[c].status==geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status.SEARCHING&&(b=false);b&&this.app.featureSetManager.tryCloseCollection(a.results.id)}}});
dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status");dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status",null,{});dojo.mixin(geocortex.essentialsHtmlViewer.mapping.infrastructure.search.Status,{IDLE:"Idle",SEARCHING:"Searching",ERROR:"Error"});dojo.provide("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProgressEventArgs");
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchProgressEventArgs",null,{constructor:function(){},status:null,error:null,message:null,results:null});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupBase",null,{items:null,app:null,id:null,name:null,tooltip:null,type:null,isActive:null,disabled:null,cssClass:null,constructor:function(a,b){this.app=a;this.type="toolbarGroup";this.tooltip=null;this.isActive=new Observable(false);this.disabled=new Observable(false);this.cssClass=new Observable;if(b){this.name=b.name;this.id=b.id||b.name||geocortex.framework.utils.alphaNumericToken();if(b.hasOwnProperty("tooltip"))this.tooltip=
b.tooltip;this.items=b.items?this.getToolbarGroupItems(b.items):new ObservableCollection}},getToolbarGroupItems:function(a){var b=this,c=new ObservableCollection;dojo.forEach(a,function(a){if(a=new geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupItemBase(b.app,a))c.addItem(a);else throw Error("Failed to create toolbar group item");});return c}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupItemBase",null,{type:null,name:null,id:null,app:null,isActive:null,disabled:null,hideOnDisable:null,tooltip:null,cssClass:null,subscriptionToken:null,constructor:function(a,b){if(b)switch(this.id=b.id,this.app=a,this.type=b.type,this.name=b.name,this.tooltip=b.tooltip||null,this.isActive=new Observable(true),this.disabled=new Observable(false),this.hideOnDisable=b.hideOnDisable||false,this.cssClass=new Observable,
this.type){case "button":this.constructButton(b);break;case "region":this.constructRegion(b);break;case "tool":this.constructTool(b);break;case "toolbarGroup":this.constructToolBarGroup(b)}},constructButton:function(a){this.command=new geocortex.essentialsHtmlViewer.mapping.modules.command.CommandViewModel(this.app,this.libraryId,a.command,a.commandParameter);this.disabled.set(!this.command.canExecute.get());this.command.canExecute.bind(this,function(a){this.disabled.set(!a)});this.iconUri=a.iconUri},
constructRegion:function(a){this.regionName=a.regionName;this.viewModelType=a.viewModelType},constructTool:function(a){if(a){var b=[];b.push({id:a.id,name:a.id,command:a.command,drawMode:a.drawMode,statusText:a.statusText,isSticky:a.isSticky});this.tool=this.app.toolRegistry.createTools(b,true)[0];this.iconUri=a.iconUri}},constructToolBarGroup:function(a){this.items=new ObservableCollection;for(var b=0;b<a.items.length;b++){var c=new geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupItemBase(this.app,
a.items[b]);c&&this.items.addItem(c)}this.disabled.set(this.areAllHidden(this.items))},areAllHidden:function(a){for(var b=0;b<a.length();b++)if(a.getAt(b).disabled.get()===false||a.getAt(b).hideOnDisable===false)return false;return true},execute:function(){switch(this.type){case "button":this.command&&this.command.commandName.get()&&(this.command.commandParameter.get()?this.app.commandRegistry.command(this.command.commandName.get()).execute(this.command.commandParameter.get()):this.app.commandRegistry.command(this.command.commandName.get()).execute());
break;case "tool":this.app.commandRegistry.command("SetActiveTool").execute(this.tool.id)}},activate:function(){this.isActive.set(true)},deactivate:function(){this.isActive.set(false)}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupRegistry",null,{constructor:function(a){this.app=a;this.toolbarGroupList=new ObservableCollection;this._toolbarGroupsConfig=[]},app:null,toolbarGroupList:null,_toolbarGroupsConfig:null,getToolbarGroupById:function(a){if(this._toolbarGroupsConfig.length===0||a===null)return null;for(var b=0;b<this._toolbarGroupsConfig.length;b++)if(this._toolbarGroupsConfig[b].id==a)return new geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupBase(this.app,
this._toolbarGroupsConfig[b])},registerToolbarGroups:function(a){if(a){var b=this;dojo.forEach(a,function(a){var d=new geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupBase(b.app,a);b._toolbarGroupsConfig.push(a);b.unregisterToolbarGroup(a.id);b.toolbarGroupList.addItems(d)})}},unregisterToolbarGroup:function(a){a=this.getPosition(a);a!=null&&this.toolbarGroupList.get().splice(a,1)},getPosition:function(a){if(!this.toolbarGroupList.isEmpty())for(var b=0;b<this.toolbarGroupList.getLength();b++)if(this.toolbarGroupList.getAt(b).id===
a)return b;return null}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.MapTool",geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolBase,{constructor:function(){},_draw:null,_drawIsActive:false,command:null,drawMode:null,isSticky:false,onActivated:function(){this.inherited(arguments);if(!this._draw)this._draw=new esri.toolbars.Draw(this.app.map),this._draw.markerSymbol=new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,10,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,
0,0,0.8]),2),new dojo.Color([0,0,0,0.8])),this._draw.fillSymbol=new esri.symbol.SimpleFillSymbol(esri.symbol.SimpleFillSymbol.STYLE_SOLID,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0,0.8]),2),new dojo.Color([0,0,0,0.25])),this._draw.lineSymbol=new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new dojo.Color([0,0,0,0.8]),2),dojo.connect(this._draw,"onDrawEnd",this,this.onDrawEnd);if(this._drawIsActive)this._draw.deactivate(),
this._drawIsActive=false;if(this.drawMode=="CURRENT_EXTENT")this.onDrawEnd(this.app.map.extent);else{if(!this.app.map.graphics)return;this._draw.activate(esri.toolbars.Draw[this.drawMode]);this._drawIsActive=true}this.app.eventRegistry.event("MapMouseDownEvent").subscribe(this,function(a){if(a.which===3&&this._draw)this._deactivateToolbar(),this._draw=null,this.app.commandRegistry.command("RemoveStatus").execute()})},onDeactivated:function(){this.inherited(arguments);this._deactivateToolbar()},_deactivateToolbar:function(){if(this._draw&&
this._drawIsActive)this._draw.deactivate(),this._drawIsActive=false},onDrawEnd:function(a){if(this.command){var b=this.app.commandRegistry.command(this.command);b.canExecute(a)?b.execute(a):this.app.trace.warning("Could not invoke command '{0}' for tool '{1}'.".format(this.name,this.command))}var c=this;setTimeout(function(){c.isSticky||c.setActive(false)},0)}});
dojo.declare("geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolRegistry",null,{constructor:function(a){this._app=a;this.tools={};this._subscriptions={};this._registerCommands()},_app:null,tools:null,_subscriptions:null,_registerCommands:function(){var a=this;this._app.commandRegistry.command("SetActiveTool").register(this,function(b){a.setActiveTool(b)},function(b){return a.tool(b)?true:false});this._app.commandRegistry.command("ClearActiveTool").register(this,function(){a.clearActiveTool()},
function(){return true})},clearActiveTool:function(){for(var a in this.tools){var b=this.tools[a];b&&b.isActive&&b.setActive(false)}},getActiveTool:function(){for(var a in this.tools){var b=this.tools[a];if(b&&b.isActive)return b}return null},setActiveTool:function(a){this.clearActiveTool();if(a){var b=this.tool(a);b?b.setActive(true):this._app.trace.warning("Could not activate tool '{0}'. The tool does not exist in the registry.".format(a))}},tool:function(a){return this.tools[a]},register:function(a){this.unregister(a);
if(a&&a.name){this.tools[a.name]=a;var b=this;this._subscriptions[a.name]=dojo.connect(a,"setActive",function(c){if(c===true){for(var d in b.tools)(c=b.tools[d])&&c!=a&&c.isActive&&c.setActive(false);b._app.eventRegistry.event("ActiveToolChanged").publish({tool:a,previousTool:null});b._app.eventRegistry.event("ActiveToolChangedEvent").publish({tool:a,previousTool:null})}else b.getActiveTool()||(b._app.eventRegistry.event("ActiveToolChanged").publish({tool:null,previousTool:a}),b._app.eventRegistry.event("ActiveToolChangedEvent").publish({tool:null,
previousTool:a}))})}},unregister:function(a){if(a&&a.name&&this.tools[a.name]==a){this.tools[a.name]=null;var b=this._subscriptions[a.name];b&&(dojo.disconnect(b),this._subscriptions[a.name]=null)}},clear:function(){for(var a in this.tools){var b=this.tools[a];b&&this.unregister(b)}},createTools:function(a,b){var c=[],d=this;a&&dojo.forEach(a,function(e){var f=dojo.getObject(a.typeName?a.typeName:"geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.MapTool");f?(e=new f(d._app,e),c.push(e),
b&&d.register(e)):d.app.trace.warning("Could not create tool '{0}' from type name '{1}'.".format(a.name,a.typeName))});return c}});
geocortex.essentialsHtmlViewer.Commands={_commandsMetadata:[{name:"ActivateView",metadata:{arguments:"string",description:"Activates a view.",isHyperlinkable:true,visibility:"public"}},{name:"DeactivateView",metadata:{arguments:"string",description:"Deactivates a view.",isHyperlinkable:true,visibility:"public"}},{name:"ToggleView",metadata:{arguments:"string",description:"Activates or deactivates a view.",isHyperlinkable:true,visibility:"public"}},{name:"ToggleLogView",metadata:{arguments:"none",
description:"Activates or deactivates log view.",isHyperlinkable:true,visibility:"public"}},{name:"ToggleResultsFrame",metadata:{arguments:"none",description:"Activates or deactivates Results frame.",isHyperlinkable:true,visibility:"public"}},{name:"ToggleDataFrame",metadata:{arguments:"none",description:"Activates or deactivates data frame.",isHyperlinkable:true,visibility:"public"}},{name:"DestroyView",metadata:{arguments:"string",description:"Destroys a view, wiping out its bindings and DOM substructure.",
isHyperlinkable:true,visibility:"public"}},{name:"CloseModalRegion",metadata:{arguments:"none",description:"Closes the ModalWindowRegion.",isHyperlinkable:true,visibility:"public"}},{name:"OpenWebPage",metadata:{arguments:"string",description:"Opens a web page in another tab/window.",isHyperlinkable:true,visibility:"public"}},{name:"Alert",metadata:{arguments:"list",description:"Displays an alert.",isHyperlinkable:true,visibility:"public"}},{name:"Confirm",metadata:{arguments:"list",description:"Displays a confirm.",
isHyperlinkable:true,visibility:"public"}},{name:"Identify",metadata:{arguments:"esri.geometry.Geometry",description:"Executes an identify operation on a geometry.",isHyperlinkable:true,visibility:"public"}},{name:"Prompt",metadata:{arguments:"object",description:"Displays a prompt.",isHyperlinkable:true,visibility:"public"}},{name:"StepZoomIn",metadata:{arguments:"none",description:"Zooms in a step.",isHyperlinkable:true,visibility:"public"}},{name:"StepZoomOut",metadata:{arguments:"none",description:"Zooms out a step.",
isHyperlinkable:true,visibility:"public"}},{name:"RecenterMapOnNextMapResize",metadata:{arguments:"none",description:"Recenters the map to its existing position the next time the map is resized.",isHyperlinkable:true,visibility:"public"}},{name:"PanToPoint",metadata:{arguments:"esri.geometry.Geometry",description:"Pans to a point or other type of Geometry.",isHyperlinkable:true,visibility:"public"}},{name:"PanUp",metadata:{arguments:"none",description:"Pans the map up.",isHyperlinkable:true,visibility:"public"}},
{name:"PanDown",metadata:{arguments:"none",description:"Pans the map down.",isHyperlinkable:true,visibility:"public"}},{name:"PanLeft",metadata:{arguments:"none",description:"Pans the map left.",isHyperlinkable:true,visibility:"public"}},{name:"PanRight",metadata:{arguments:"none",description:"Pans the map right.",isHyperlinkable:true,visibility:"public"}},{name:"ZoomToExtent",metadata:{arguments:"esri.geometry.Extent",description:"Zooms to the given extent.",isHyperlinkable:true,visibility:"public"}},
{name:"ZoomToScale",metadata:{arguments:"number",description:"Zooms to the given scale.",isHyperlinkable:true,visibility:"public"}},{name:"ZoomOutToExtent",metadata:{arguments:"esri.geometry.Extent",description:"Zooms out to the given extent.",isHyperlinkable:true,visibility:"public"}},{name:"ZoomToEsriFeatureSet",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet",description:"Zooms to the extent of all the features in the feature set.",isHyperlinkable:true,visibility:"public"}},
{name:"ZoomToLayerExtent",metadata:{arguments:"geocortex.essentials.Layer",description:"Zooms to the extent of all the features in a layer.",isHyperlinkable:true,visibility:"public"}},{name:"ZoomToLayerVisibleScale",metadata:{arguments:"geocortex.essentials.Layer",description:"Zooms to the scale at which features in a layer become visible.",isHyperlinkable:true,visibility:"public"}},{name:"InitializeSite",metadata:{arguments:"none",description:"Tells the Geocortex Essentials Site object to begin initialization.",
isHyperlinkable:true,visibility:"public"}},{name:"ZoomToInitialExtent",metadata:{arguments:"none",description:"Zooms to the initial extent of the current Site.",isHyperlinkable:true,visibility:"public"}},{name:"ZoomToFullExtent",metadata:{arguments:"none",description:"Zooms to the full extent of the current Site.",isHyperlinkable:true,visibility:"public"}},{name:"MapResize",metadata:{arguments:"none",description:"Tells the map control to resize itself. This should be called after altering the map container's dimensions.",
isHyperlinkable:true,visibility:"public"}},{name:"AddTemporaryMarkupGeometry",metadata:{arguments:"esri.geometry.Geometry",description:"Adds a temporary markup graphic to the map. The {@link Commands.ClearTemporaryMarkup} command will clear this piece of markup.",isHyperlinkable:true,visibility:"public"}},{name:"ClearTemporaryMarkup",metadata:{arguments:"none",description:"Removes temporary markup created by {@link Commands.AddTemporaryMarkupGeometry}.",isHyperlinkable:true,visibility:"public"}},
{name:"ZoomToFeature",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Zooms to a feature.",isHyperlinkable:true,visibility:"public"}},{name:"ShowMap",metadata:{arguments:"none",description:"Activates map view.",isHyperlinkable:true,visibility:"public"}},{name:"ShowMapElement",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs",description:"Displays an element anchored to a specific point on the map.",isHyperlinkable:true,
visibility:"public"}},{name:"ShowMapCallout",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.ShowMapElementArgs",description:"Displays a map callout anchored to a given point.",isHyperlinkable:true,visibility:"public"}},{name:"HideMapElement",metadata:{arguments:"string",description:"Removes an element previously anchored to the map using {@link Commands.ShowMapElement}.",isHyperlinkable:true,visibility:"public"}},{name:"ShowMapTipResults",metadata:{arguments:"string",description:"Shows map tip results for a FeatureSetCollection previously added to the FeatureSetManager.",
isHyperlinkable:true,visibility:"public"}},{name:"OpenDataFrame",metadata:{arguments:"none",description:"Opens the DataRegion, if present in the current shell.",isHyperlinkable:true,visibility:"public"}},{name:"CloseDataFrame",metadata:{arguments:"none",description:"Closes the DataRegion, if it is present in the current shell.",isHyperlinkable:true,visibility:"public"}},{name:"OpenBottomRegion",metadata:{arguments:"none",description:"Opens the BottomPanelRegion, if it is present in the current shell.",
isHyperlinkable:true,visibility:"public"}},{name:"CloseBottomRegion",metadata:{arguments:"none",description:"Closes the BottomPanelRegion, if it is present in the current shell.",isHyperlinkable:true,visibility:"public"}},{name:"RunWorkflowById",metadata:{arguments:"string",description:"Runs a workflow.",isHyperlinkable:true,visibility:"public"}},{name:"RunWorkflowWithGeometry",metadata:{arguments:"object",description:"Runs a workflow with a geometry used as an input argument.",isHyperlinkable:true,
visibility:"public"}},{name:"RunWorkflowWithArguments",metadata:{arguments:"object",description:"Runs a workflow with a set of input arguments.",isHyperlinkable:true,visibility:"public"}},{name:"DisplayWorkflowContainerContent",metadata:{arguments:"object",description:"Displays a view in a workflow container.",isHyperlinkable:true,visibility:"public"}},{name:"ClearActiveTool",metadata:{arguments:"none",description:"Clears the active tool.",isHyperlinkable:true,visibility:"public"}},{name:"SetActiveTool",
metadata:{arguments:"string",description:"Sets the active tool.",isHyperlinkable:true,visibility:"public"}},{name:"Geolocate",metadata:{arguments:"none",description:"Zooms to the current location of the device.",isHyperlinkable:true,visibility:"public"}},{name:"TakeApplicationOffline",metadata:{arguments:"none",description:"Puts the application in an offline state.",isHyperlinkable:false,visibility:"public"}},{name:"TakeApplicationOnline",metadata:{arguments:"none",description:"Connects the application to the internet.",
isHyperlinkable:false,visibility:"public"}},{name:"DownloadOfflineResources",metadata:{arguments:"string",description:"Downloads the viewer bundle for offline use.",isHyperlinkable:false,visibility:"public"}},{name:"OpenFeatureSetCollection",metadata:{arguments:"string",description:"Opens the feature set collection.",isHyperlinkable:true,visibility:"public"}},{name:"CloseFeatureSetCollection",metadata:{arguments:"string",description:"Closes the feature set collection.",isHyperlinkable:true,visibility:"public"}},
{name:"RemoveFeatureSetCollection",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",description:"Removes the specified collection from the feature set manager.",isHyperlinkable:true,visibility:"public"}},{name:"RemoveFeatureSetCollectionById",metadata:{arguments:"string",description:"Removes the specified collection from the feature set manager.",isHyperlinkable:true,visibility:"public"}},{name:"Search",metadata:{arguments:"string",description:"Performs a search on all active providers.",
isHyperlinkable:true,visibility:"public"}},{name:"GlobalSearch",metadata:{arguments:"string",description:"Performs a search on all active providers.",isHyperlinkable:true,visibility:"public"}},{name:"CancelSearch",metadata:{arguments:"none",description:"Cancel the search on all providers.",isHyperlinkable:true,visibility:"public"}},{name:"ClearSearch",metadata:{arguments:"none",description:"Clear the search results.",isHyperlinkable:true,visibility:"public"}},{name:"ShowFeatureDetails",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",
description:"Creates and displays the Feature Details dialog for the feature or feature set collection specified.",isHyperlinkable:true,visibility:"public"}},{name:"ShowFeatureAttributeEditor",metadata:{arguments:"none",description:"Shows the feature attribute editor used to set feature attributes.",isHyperlinkable:true,visibility:"public"}},{name:"HideFeatureAttributeEditor",metadata:{arguments:"none",description:"Hides the feature attribute editor used to set feature attributes.",isHyperlinkable:true,
visibility:"public"}},{name:"ShowFeatureTemplatePicker",metadata:{arguments:"layer",description:"Shows the feature template picker used to create new features. If a layer is supplied, shows the templates for the layer.",isHyperlinkable:true,visibility:"public"}},{name:"HideFeatureTemplatePicker",metadata:{arguments:"none",description:"Hides the feature template picker used to create new features.",isHyperlinkable:true,visibility:"public"}},{name:"FeatureLayerClearData",metadata:{arguments:"string",
description:"Clears the data for a given map service URL.",isHyperlinkable:true,visibility:"public"}},{name:"FeatureLayerCacheData",metadata:{arguments:"list",description:"Caches the data for a given map service URL.",isHyperlinkable:true,visibility:"public"}},{name:"FeatureLayerClearCacheSpec",metadata:{arguments:"string",description:"Specify this layer as not to be cached on next sync.",isHyperlinkable:true,visibility:"public"}},{name:"FeatureLayerSetCacheSpec",metadata:{arguments:"list",description:"Defines what data will be cached on the next sync.",
isHyperlinkable:true,visibility:"public"}},{name:"FeatureLayerModuleRefreshData",metadata:{arguments:"none",description:'Refreshes layer edit summaries and the "syncNeeded" flag.',isHyperlinkable:false,visibility:"public"}},{name:"FeatureLayerModuleStartSync",metadata:{arguments:"none",description:"Starts synchronizes the feature edits to the server.",isHyperlinkable:true,visibility:"public"}},{name:"ShowFeatureLayerDetails",metadata:{arguments:"geocortex.essentials.Layer",description:"Shows the feature layer details view used in setting cache behavior for a given feature layer.",
isHyperlinkable:true,visibility:"public"}},{name:"ShowFeatureLayerEditLog",metadata:{arguments:"none",description:"Shows the feature layer edit log.",isHyperlinkable:true,visibility:"public"}},{name:"PanToFeature",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Pans to a Geocortex feature.",isHyperlinkable:true,visibility:"public"}},{name:"Project",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.commandArgs.ProjectArgs",description:"Calls a geometry service to project geometries between different coordinate systems.",
isHyperlinkable:false,visibility:"public"}},{name:"InvokeMapTip",metadata:{arguments:"esri.geometry.Geometry",description:'Executes an Identify operation on the given geometry and sets "MapTip" as its source tag.',isHyperlinkable:true,visibility:"public"}},{name:"ShowMapTip",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Creates a Map Tip View and displays the feature in it.",isHyperlinkable:true,visibility:"public"}},{name:"ClearStorageForApplication",
metadata:{arguments:"none",description:"Clears the offline data for the current application.",isHyperlinkable:true,visibility:"public"}},{name:"ClearStorageForDomain",metadata:{arguments:"none",description:"Clears all offline data for the current domain. This includes data for all applications loaded from the current domain.",isHyperlinkable:true,visibility:"public"}},{name:"ShowResultsList",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",description:"Displays the list of features in the given feature set collection as a List.",
isHyperlinkable:false,visibility:"public"}},{name:"ShowResultsTable",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection",description:"Displays the list of features in the given feature set collection in a tabular view.",isHyperlinkable:false,visibility:"public"}},{name:"OpenResultsFrame",metadata:{arguments:"none",description:"Activates the ResultsRegion.",isHyperlinkable:true,visibility:"public"}},{name:"CloseResultsFrame",metadata:{arguments:"none",description:"Deactivates the ResultsRegion.",
isHyperlinkable:true,visibility:"public"}},{name:"ShowLayerList",metadata:{arguments:"none",description:"Activates the SimpleLayerList View.",isHyperlinkable:true,visibility:"public"}},{name:"ShowLayerActions",metadata:{arguments:"geocortex.essentials.Layer",description:"Shows available actions for a given layer.",isHyperlinkable:true,visibility:"public"}},{name:"PulseStatus",metadata:{arguments:"string",description:"Resets the timer of the status viewModel.",isHyperlinkable:true,visibility:"public"}},
{name:"RemoveStatus",metadata:{arguments:"string",description:"Removes the status indicator from the screen with the specified ID.",isHyperlinkable:true,visibility:"public"}},{name:"AddStatus",metadata:{arguments:"object",description:"Adds a status indicator to the screen.",isHyperlinkable:true,visibility:"public"}},{name:"CreateHighlightLayer",metadata:{arguments:"string",description:"Creates a new highlight layer with the specified name.",isHyperlinkable:true,visibility:"public"}},{name:"SetActiveHighlightLayer",
metadata:{arguments:"string",description:"Sets the layer with the specified name as active, if there is one.",isHyperlinkable:true,visibility:"public"}},{name:"SetActiveHighlightLayerDefault",metadata:{arguments:"none",description:"Sets the default highlight as active.",isHyperlinkable:true,visibility:"public"}},{name:"HighlightEsriFeatureSet",metadata:{arguments:"esri.tasks.FeatureSet",description:"Highlights all of the features in the specified feature set in the active highlight layer.",isHyperlinkable:false,
visibility:"public"}},{name:"SetHighlightBorderColor",metadata:{arguments:"string",description:"Sets the border color used for new highlights, specified in 6 or 8 digit hex in RGB or ARGB form.",isHyperlinkable:true,visibility:"public"}},{name:"SetHighlightFillColor",metadata:{arguments:"string",description:"Sets the fill color used for new highlights, specified in 6 or 8 digit hex in RGB or ARGB form.",isHyperlinkable:true,visibility:"public"}},{name:"RemoveHighlightLayer",metadata:{arguments:"string",
description:"Removes the highlight layer with the specified name, if there is one.",isHyperlinkable:true,visibility:"public"}},{name:"ClearHighlights",metadata:{arguments:"none",description:"Removes the highlights from the active highlight layer.",isHyperlinkable:true,visibility:"public"}},{name:"ClearDefaultHighlights",metadata:{arguments:"none",description:"Removes the highlights from the default highlight layer.",isHyperlinkable:true,visibility:"public"}},{name:"HighlightFeatureSet",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet",
description:"Highlights all of the features in the specified feature set in the active highlight layer.",isHyperlinkable:true,visibility:"public"}},{name:"HighlightFeature",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Highlights the feature in the active highlight layer.",isHyperlinkable:true,visibility:"public"}},{name:"HighlightFeatureDefault",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Highlights the feature in the default highlight layer.",
isHyperlinkable:true,visibility:"public"}},{name:"AddMarkup",metadata:{arguments:"esri.geometry.Geometry",description:"Adds the given geometry to the markup layer.",isHyperlinkable:true,visibility:"public"}},{name:"AddTextMarkup",metadata:{arguments:"esri.geometry.Geometry",description:"Prompts the user for text to add as markup. When completed, text markup is added at the provided geometry.",isHyperlinkable:true,visibility:"public"}},{name:"ClearMarkup",metadata:{arguments:"none",description:"Prompts the user for confirmation, and if approved, clears all of the markup from the markup layer.",
isHyperlinkable:true,visibility:"public"}},{name:"ClearMarkupQuiet",metadata:{arguments:"none",description:"Clears all of the markup from the markup layer without prompting for confirmation.",isHyperlinkable:true,visibility:"public"}},{name:"ResizeShell",metadata:{arguments:"none",description:"Recalculate the size and layout of the shell and refresh the shell accordingly.",isHyperlinkable:true,visibility:"public"}},{name:"ActivateHomePanel",metadata:{arguments:"none",description:"Activates Home Panel if it is configured to be included.",
isHyperlinkable:true,visibility:"public"}},{name:"AttachFileToFeature",metadata:{arguments:"geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature",description:"Checks for HTML5 FileReader / Cordova support and activates File Attachments if supported.",isHyperlinkable:true,visibility:"public"}},{name:"ToggleToolbar",metadata:{arguments:"none",description:"Toggles the visibility of the toolbar if present.",isHyperlinkable:true,visibility:"public"}},{name:"PrintMap",metadata:{arguments:"none",
description:"Displays dialog to create a printable map.",isHyperlinkable:true,visibility:"public"}}],metadataForCommandName:function(a){for(var b=0;b<this._commandsMetadata.length;b++){var c=this._commandsMetadata[b];if(c.name===a)return c.metadata}return null},publicCommands:function(){for(var a=[],b=0;b<this._commandsMetadata.length;b++){var c=this._commandsMetadata[b];c.metadata.visibility==="public"&&a.push(c)}return a}};var Feature=null,FeatureSet=null,FeatureSetCollection=null;
dojo.ready(function(){FeatureAttribute=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureAttribute");Feature=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.Feature");FeatureSet=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSet");FeatureSetCollection=dojo.getObject("geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetCollection")});dojo.provide("geocortex.essentialsHtmlViewer.ViewerApplication");
dojo.declare("geocortex.essentialsHtmlViewer.ViewerApplication",geocortex.framework.application.Application,{version:geocortex.essentialsHtmlViewer.version,map:null,site:null,featureSetManager:null,menuRegistry:null,modalRegionSingleton:null,searchManager:null,toolRegistry:null,_workflowActivityDispatcher:null,_activityTypeHandlerQueue:null,_activityIdHandlerQueue:null,constructor:function(){this.___uaIsiPad=!!navigator.userAgent.match(/iPad/i);this._activityTypeHandlerQueue=[];this._activityIdHandlerQueue=
[];this.featureSetManager=new geocortex.essentialsHtmlViewer.mapping.infrastructure.FeatureSetManager(this);this.toolRegistry=new geocortex.essentialsHtmlViewer.mapping.infrastructure.tools.ToolRegistry(this);this.menuRegistry=new geocortex.essentialsHtmlViewer.mapping.infrastructure.menus.MenuRegistry(this);this.toolbarGroupRegistry=new geocortex.essentialsHtmlViewer.mapping.infrastructure.toolbarGroup.ToolbarGroupRegistry(this);this.searchManager=new geocortex.essentialsHtmlViewer.mapping.infrastructure.search.SearchManager(this);
this.highlightManager=new geocortex.essentialsHtmlViewer.mapping.infrastructure.HighlightManager(this)},initialize:function(){if(document.all&&!document.querySelector)this.debugMode=true;var a=this.configUri?this.configUri.split("/"):window.location.href.split("/");this.configTokens.ViewerConfigUri=a.slice(0,a.length-1).join("/")+"/";this.inherited(arguments)},registerActivityTypeHandler:function(a,b){this._workflowActivityDispatcher?this._workflowActivityDispatcher.registerActivityHandler(a,b):this._activityTypeHandlerQueue.push({typeName:a,
handler:b})},registerActivityIdHandler:function(a,b){this._workflowActivityDispatcher?this._workflowActivityDispatcher.registerExternalIdHandler(a,b):this._activityIdHandlerQueue.push({id:a,handler:b})},getWorkflowActivityDispatcher:function(){return this._workflowActivityDispatcher},setWorkflowActivityDispatcher:function(a){this._workflowActivityDispatcher=a;for(a=0;a<this._activityTypeHandlerQueue.length;++a){var b=this._activityTypeHandlerQueue[a];this._workflowActivityDispatcher.registerActivityHandler(b.typeName,
b.handler)}this._activityTypeHandlerQueue=[];for(a=0;a<this._activityIdHandlerQueue.length;++a)b=this._activityIdHandlerQueue[a],this._workflowActivityDispatcher.registerExternalIdHandler(b.id,b.handler);this._activityIdHandlerQueue=[]},shutdown:function(a){this.toolRegistry.clear();this.inherited(arguments)},onConfigurationLoaded:function(a){var b=a.configuration;if(b.hasOwnProperty("application")&&b.application.hasOwnProperty("geometryServiceUrl"))esri.config.defaults.geometryService=b.application.geometryServiceUrl;
a.configuration.application&&a.configuration.application.oAuth2ClientId&&!geocortex.essentials.OAuth2Client.applicationHasImplicitGrant()&&!geocortex.essentials.OAuth2Client.applicationHasImplicitGrantError()?(geocortex.essentials.OAuth2Client.redirectToLogOnPage(a.configuration.application.oAuth2AuthorizeUri||"http://www.arcgisonline.com/sharing/oauth2/authorize",a.configuration.application.oAuth2ClientId),this.abortInitialization=true):this.inherited(arguments)}});
